/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { SquareClient } from "../../../src/Client";

describe("Segments", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            segment: {
                id: "GMNXRZVEXNQDF.CHURN_RISK",
                name: "Lapsed",
                created_at: "2020-01-09T19:33:24.469Z",
                updated_at: "2020-04-13T23:01:13Z",
            },
        };
        server
            .mockEndpoint()
            .get("/v2/customers/segments/segment_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.customers.segments.get({
            segmentId: "segment_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            segment: {
                id: "GMNXRZVEXNQDF.CHURN_RISK",
                name: "Lapsed",
                createdAt: "2020-01-09T19:33:24.469Z",
                updatedAt: "2020-04-13T23:01:13Z",
            },
        });
    });
});
