/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../../mock-server/MockServerPool";
import { SquareClient } from "../../../../src/Client";

describe("Promotions", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            loyalty_promotion: {
                name: "Tuesday Happy Hour Promo",
                incentive: { type: "POINTS_MULTIPLIER", points_multiplier_data: { multiplier: "3.0" } },
                available_time: {
                    time_periods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                trigger_limit: { times: 1, interval: "DAY" },
                minimum_spend_amount_money: { amount: BigInt(2000), currency: "USD" },
                qualifying_category_ids: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
            idempotency_key: "ec78c477-b1c3-4899-a209-a4e71337c996",
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            loyalty_promotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    points_multiplier_data: { points_multiplier: 3, multiplier: "3.000" },
                    points_addition_data: { points_addition: 1 },
                },
                available_time: {
                    start_date: "2022-08-16",
                    end_date: "end_date",
                    time_periods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                trigger_limit: { times: 1, interval: "DAY" },
                status: "ACTIVE",
                created_at: "2022-08-16T08:38:54Z",
                canceled_at: "canceled_at",
                updated_at: "2022-08-16T08:38:54Z",
                loyalty_program_id: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimum_spend_amount_money: { amount: BigInt(2000), currency: "USD" },
                qualifying_item_variation_ids: ["qualifying_item_variation_ids"],
                qualifying_category_ids: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
        };
        server
            .mockEndpoint()
            .post("/v2/loyalty/programs/program_id/promotions")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.loyalty.programs.promotions.create({
            programId: "program_id",
            loyaltyPromotion: {
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    pointsMultiplierData: {
                        multiplier: "3.0",
                    },
                },
                availableTime: {
                    timePeriods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                triggerLimit: {
                    times: 1,
                    interval: "DAY",
                },
                minimumSpendAmountMoney: {
                    amount: BigInt("2000"),
                    currency: "USD",
                },
                qualifyingCategoryIds: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
            idempotencyKey: "ec78c477-b1c3-4899-a209-a4e71337c996",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            loyaltyPromotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    pointsMultiplierData: {
                        pointsMultiplier: 3,
                        multiplier: "3.000",
                    },
                    pointsAdditionData: {
                        pointsAddition: 1,
                    },
                },
                availableTime: {
                    startDate: "2022-08-16",
                    endDate: "end_date",
                    timePeriods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                triggerLimit: {
                    times: 1,
                    interval: "DAY",
                },
                status: "ACTIVE",
                createdAt: "2022-08-16T08:38:54Z",
                canceledAt: "canceled_at",
                updatedAt: "2022-08-16T08:38:54Z",
                loyaltyProgramId: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimumSpendAmountMoney: {
                    amount: BigInt("2000"),
                    currency: "USD",
                },
                qualifyingItemVariationIds: ["qualifying_item_variation_ids"],
                qualifyingCategoryIds: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            loyalty_promotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    points_multiplier_data: { points_multiplier: 3, multiplier: "3.000" },
                    points_addition_data: { points_addition: 1 },
                },
                available_time: {
                    start_date: "2022-08-16",
                    end_date: "end_date",
                    time_periods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                trigger_limit: { times: 1, interval: "DAY" },
                status: "ACTIVE",
                created_at: "2022-08-16T08:38:54Z",
                canceled_at: "canceled_at",
                updated_at: "2022-08-16T08:38:54Z",
                loyalty_program_id: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimum_spend_amount_money: { amount: BigInt(2000), currency: "USD" },
                qualifying_item_variation_ids: ["CJ3RYL56ITAKMD4VRCM7XERS", "AT3RYLR3TUA9C34VRCB7X5RR"],
                qualifying_category_ids: ["qualifying_category_ids"],
            },
        };
        server
            .mockEndpoint()
            .get("/v2/loyalty/programs/program_id/promotions/promotion_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.loyalty.programs.promotions.get({
            promotionId: "promotion_id",
            programId: "program_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            loyaltyPromotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    pointsMultiplierData: {
                        pointsMultiplier: 3,
                        multiplier: "3.000",
                    },
                    pointsAdditionData: {
                        pointsAddition: 1,
                    },
                },
                availableTime: {
                    startDate: "2022-08-16",
                    endDate: "end_date",
                    timePeriods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                triggerLimit: {
                    times: 1,
                    interval: "DAY",
                },
                status: "ACTIVE",
                createdAt: "2022-08-16T08:38:54Z",
                canceledAt: "canceled_at",
                updatedAt: "2022-08-16T08:38:54Z",
                loyaltyProgramId: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimumSpendAmountMoney: {
                    amount: BigInt("2000"),
                    currency: "USD",
                },
                qualifyingItemVariationIds: ["CJ3RYL56ITAKMD4VRCM7XERS", "AT3RYLR3TUA9C34VRCB7X5RR"],
                qualifyingCategoryIds: ["qualifying_category_ids"],
            },
        });
    });

    test("cancel", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            loyalty_promotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    points_multiplier_data: { points_multiplier: 3, multiplier: "3.000" },
                    points_addition_data: { points_addition: 1 },
                },
                available_time: {
                    start_date: "2022-08-16",
                    end_date: "end_date",
                    time_periods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                trigger_limit: { times: 1, interval: "DAY" },
                status: "CANCELED",
                created_at: "2022-08-16T08:38:54Z",
                canceled_at: "2022-08-17T12:42:49Z",
                updated_at: "2022-08-17T12:42:49Z",
                loyalty_program_id: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimum_spend_amount_money: { amount: BigInt(2000), currency: "USD" },
                qualifying_item_variation_ids: ["qualifying_item_variation_ids"],
                qualifying_category_ids: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
        };
        server
            .mockEndpoint()
            .post("/v2/loyalty/programs/program_id/promotions/promotion_id/cancel")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.loyalty.programs.promotions.cancel({
            promotionId: "promotion_id",
            programId: "program_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            loyaltyPromotion: {
                id: "loypromo_f0f9b849-725e-378d-b810-511237e07b67",
                name: "Tuesday Happy Hour Promo",
                incentive: {
                    type: "POINTS_MULTIPLIER",
                    pointsMultiplierData: {
                        pointsMultiplier: 3,
                        multiplier: "3.000",
                    },
                    pointsAdditionData: {
                        pointsAddition: 1,
                    },
                },
                availableTime: {
                    startDate: "2022-08-16",
                    endDate: "end_date",
                    timePeriods: [
                        "BEGIN:VEVENT\nDTSTART:20220816T160000\nDURATION:PT2H\nRRULE:FREQ=WEEKLY;BYDAY=TU\nEND:VEVENT",
                    ],
                },
                triggerLimit: {
                    times: 1,
                    interval: "DAY",
                },
                status: "CANCELED",
                createdAt: "2022-08-16T08:38:54Z",
                canceledAt: "2022-08-17T12:42:49Z",
                updatedAt: "2022-08-17T12:42:49Z",
                loyaltyProgramId: "d619f755-2d17-41f3-990d-c04ecedd64dd",
                minimumSpendAmountMoney: {
                    amount: BigInt("2000"),
                    currency: "USD",
                },
                qualifyingItemVariationIds: ["qualifying_item_variation_ids"],
                qualifyingCategoryIds: ["XTQPYLR3IIU9C44VRCB3XD12"],
            },
        });
    });
});
