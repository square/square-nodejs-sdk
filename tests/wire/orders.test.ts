/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { SquareClient } from "../../src/Client";

describe("Orders", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            order: {
                location_id: "057P5VYJ4A5X1",
                reference_id: "my-order-001",
                line_items: [
                    {
                        name: "New York Strip Steak",
                        quantity: "1",
                        base_price_money: { amount: BigInt(1599), currency: "USD" },
                    },
                    {
                        quantity: "2",
                        catalog_object_id: "BEMYCSMIJL46OCDV4KYIKXIB",
                        modifiers: [{ catalog_object_id: "CHQX7Y4KY6N5KINJKZCFURPZ" }],
                        applied_discounts: [{ discount_uid: "one-dollar-off" }],
                    },
                ],
                taxes: [{ uid: "state-sales-tax", name: "State Sales Tax", percentage: "9", scope: "ORDER" }],
                discounts: [
                    { uid: "labor-day-sale", name: "Labor Day Sale", percentage: "5", scope: "ORDER" },
                    { uid: "membership-discount", catalog_object_id: "DB7L55ZH2BGWI4H23ULIWOQ7", scope: "ORDER" },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        amount_money: { amount: BigInt(100), currency: "USD" },
                        scope: "LINE_ITEM",
                    },
                ],
            },
            idempotency_key: "8193148c-9586-11e6-99f9-28cfe92138cf",
        };
        const rawResponseBody = {
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                location_id: "057P5VYJ4A5X1",
                reference_id: "my-order-001",
                source: { name: "My App" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "8uSwfzvUImn3IRrvciqlXC",
                        name: "New York Strip Steak",
                        quantity: "1",
                        applied_taxes: [
                            {
                                uid: "aKG87ArnDpvMLSZJHxWUl",
                                tax_uid: "state-sales-tax",
                                applied_money: { amount: BigInt(136), currency: "USD" },
                            },
                        ],
                        applied_discounts: [
                            {
                                uid: "jWdgP1TpHPFBuVrz81mXVC",
                                discount_uid: "membership-discount",
                                applied_money: { amount: BigInt(8), currency: "USD" },
                            },
                            {
                                uid: "jnZOjjVY57eRcQAVgEwFuC",
                                discount_uid: "labor-day-sale",
                                applied_money: { amount: BigInt(79), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(1599), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(1599), currency: "USD" },
                        gross_sales_money: { amount: BigInt(1599), currency: "USD" },
                        total_tax_money: { amount: BigInt(136), currency: "USD" },
                        total_discount_money: { amount: BigInt(87), currency: "USD" },
                        total_money: { amount: BigInt(1648), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "v8ZuEXpOJpb0bazLuvrLDB",
                        name: "New York Steak",
                        quantity: "2",
                        catalog_object_id: "BEMYCSMIJL46OCDV4KYIKXIB",
                        variation_name: "Larger",
                        modifiers: [
                            {
                                uid: "Lo3qMMckDluu9Qsb58d4CC",
                                catalog_object_id: "CHQX7Y4KY6N5KINJKZCFURPZ",
                                name: "Well",
                                base_price_money: { amount: BigInt(50), currency: "USD" },
                                total_price_money: { amount: BigInt(100), currency: "USD" },
                            },
                        ],
                        applied_taxes: [
                            {
                                uid: "v1dAgrfUVUPTnVTf9sRPz",
                                tax_uid: "state-sales-tax",
                                applied_money: { amount: BigInt(374), currency: "USD" },
                            },
                        ],
                        applied_discounts: [
                            {
                                uid: "nUXvdsIItfKko0dbYtY58C",
                                discount_uid: "membership-discount",
                                applied_money: { amount: BigInt(22), currency: "USD" },
                            },
                            {
                                uid: "qSdkOOOernlVQqsJ94SPjB",
                                discount_uid: "labor-day-sale",
                                applied_money: { amount: BigInt(224), currency: "USD" },
                            },
                            {
                                uid: "y7bVl4njrWAnfDwmz19izB",
                                discount_uid: "one-dollar-off",
                                applied_money: { amount: BigInt(100), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(2200), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(4400), currency: "USD" },
                        gross_sales_money: { amount: BigInt(4500), currency: "USD" },
                        total_tax_money: { amount: BigInt(374), currency: "USD" },
                        total_discount_money: { amount: BigInt(346), currency: "USD" },
                        total_money: { amount: BigInt(4528), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [
                    {
                        uid: "state-sales-tax",
                        name: "State Sales Tax",
                        type: "ADDITIVE",
                        percentage: "9",
                        applied_money: { amount: BigInt(510), currency: "USD" },
                        scope: "ORDER",
                    },
                ],
                discounts: [
                    {
                        uid: "membership-discount",
                        catalog_object_id: "DB7L55ZH2BGWI4H23ULIWOQ7",
                        name: "Membership Discount",
                        type: "FIXED_PERCENTAGE",
                        percentage: "0.5",
                        applied_money: { amount: BigInt(30), currency: "USD" },
                        scope: "ORDER",
                    },
                    {
                        uid: "labor-day-sale",
                        name: "Labor Day Sale",
                        type: "FIXED_PERCENTAGE",
                        percentage: "5",
                        applied_money: { amount: BigInt(303), currency: "USD" },
                        scope: "ORDER",
                    },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        type: "FIXED_AMOUNT",
                        amount_money: { amount: BigInt(100), currency: "USD" },
                        applied_money: { amount: BigInt(100), currency: "USD" },
                        scope: "LINE_ITEM",
                    },
                ],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(6176), currency: "USD" },
                    tax_money: { amount: BigInt(510), currency: "USD" },
                    discount_money: { amount: BigInt(433), currency: "USD" },
                    tip_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [{ type: "CARD" }],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2020-01-17T20:47:53.293Z",
                updated_at: "2020-01-17T20:47:53.293Z",
                closed_at: "closed_at",
                state: "OPEN",
                version: 1,
                total_money: { amount: BigInt(6176), currency: "USD" },
                total_tax_money: { amount: BigInt(510), currency: "USD" },
                total_discount_money: { amount: BigInt(433), currency: "USD" },
                total_tip_money: { amount: BigInt(0), currency: "USD" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .post("/v2/orders")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.create({
            order: {
                locationId: "057P5VYJ4A5X1",
                referenceId: "my-order-001",
                lineItems: [
                    {
                        name: "New York Strip Steak",
                        quantity: "1",
                        basePriceMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                    },
                    {
                        quantity: "2",
                        catalogObjectId: "BEMYCSMIJL46OCDV4KYIKXIB",
                        modifiers: [
                            {
                                catalogObjectId: "CHQX7Y4KY6N5KINJKZCFURPZ",
                            },
                        ],
                        appliedDiscounts: [
                            {
                                discountUid: "one-dollar-off",
                            },
                        ],
                    },
                ],
                taxes: [
                    {
                        uid: "state-sales-tax",
                        name: "State Sales Tax",
                        percentage: "9",
                        scope: "ORDER",
                    },
                ],
                discounts: [
                    {
                        uid: "labor-day-sale",
                        name: "Labor Day Sale",
                        percentage: "5",
                        scope: "ORDER",
                    },
                    {
                        uid: "membership-discount",
                        catalogObjectId: "DB7L55ZH2BGWI4H23ULIWOQ7",
                        scope: "ORDER",
                    },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        amountMoney: {
                            amount: BigInt("100"),
                            currency: "USD",
                        },
                        scope: "LINE_ITEM",
                    },
                ],
            },
            idempotencyKey: "8193148c-9586-11e6-99f9-28cfe92138cf",
        });
        expect(response).toEqual({
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                locationId: "057P5VYJ4A5X1",
                referenceId: "my-order-001",
                source: {
                    name: "My App",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "8uSwfzvUImn3IRrvciqlXC",
                        name: "New York Strip Steak",
                        quantity: "1",
                        appliedTaxes: [
                            {
                                uid: "aKG87ArnDpvMLSZJHxWUl",
                                taxUid: "state-sales-tax",
                                appliedMoney: {
                                    amount: BigInt("136"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedDiscounts: [
                            {
                                uid: "jWdgP1TpHPFBuVrz81mXVC",
                                discountUid: "membership-discount",
                                appliedMoney: {
                                    amount: BigInt("8"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "jnZOjjVY57eRcQAVgEwFuC",
                                discountUid: "labor-day-sale",
                                appliedMoney: {
                                    amount: BigInt("79"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("136"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("87"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("1648"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "v8ZuEXpOJpb0bazLuvrLDB",
                        name: "New York Steak",
                        quantity: "2",
                        catalogObjectId: "BEMYCSMIJL46OCDV4KYIKXIB",
                        variationName: "Larger",
                        modifiers: [
                            {
                                uid: "Lo3qMMckDluu9Qsb58d4CC",
                                catalogObjectId: "CHQX7Y4KY6N5KINJKZCFURPZ",
                                name: "Well",
                                basePriceMoney: {
                                    amount: BigInt("50"),
                                    currency: "USD",
                                },
                                totalPriceMoney: {
                                    amount: BigInt("100"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedTaxes: [
                            {
                                uid: "v1dAgrfUVUPTnVTf9sRPz",
                                taxUid: "state-sales-tax",
                                appliedMoney: {
                                    amount: BigInt("374"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedDiscounts: [
                            {
                                uid: "nUXvdsIItfKko0dbYtY58C",
                                discountUid: "membership-discount",
                                appliedMoney: {
                                    amount: BigInt("22"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "qSdkOOOernlVQqsJ94SPjB",
                                discountUid: "labor-day-sale",
                                appliedMoney: {
                                    amount: BigInt("224"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "y7bVl4njrWAnfDwmz19izB",
                                discountUid: "one-dollar-off",
                                appliedMoney: {
                                    amount: BigInt("100"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("2200"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("4400"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("4500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("374"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("346"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("4528"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [
                    {
                        uid: "state-sales-tax",
                        name: "State Sales Tax",
                        type: "ADDITIVE",
                        percentage: "9",
                        appliedMoney: {
                            amount: BigInt("510"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                ],
                discounts: [
                    {
                        uid: "membership-discount",
                        catalogObjectId: "DB7L55ZH2BGWI4H23ULIWOQ7",
                        name: "Membership Discount",
                        type: "FIXED_PERCENTAGE",
                        percentage: "0.5",
                        appliedMoney: {
                            amount: BigInt("30"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                    {
                        uid: "labor-day-sale",
                        name: "Labor Day Sale",
                        type: "FIXED_PERCENTAGE",
                        percentage: "5",
                        appliedMoney: {
                            amount: BigInt("303"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        type: "FIXED_AMOUNT",
                        amountMoney: {
                            amount: BigInt("100"),
                            currency: "USD",
                        },
                        appliedMoney: {
                            amount: BigInt("100"),
                            currency: "USD",
                        },
                        scope: "LINE_ITEM",
                    },
                ],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("6176"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("510"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("433"),
                        currency: "USD",
                    },
                    tipMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        type: "CARD",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2020-01-17T20:47:53.293Z",
                updatedAt: "2020-01-17T20:47:53.293Z",
                closedAt: "closed_at",
                state: "OPEN",
                version: 1,
                totalMoney: {
                    amount: BigInt("6176"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("510"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("433"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("batchGet", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            location_id: "057P5VYJ4A5X1",
            order_ids: ["CAISEM82RcpmcFBM0TfOyiHV3es", "CAISENgvlJ6jLWAzERDzjyHVybY"],
        };
        const rawResponseBody = {
            orders: [
                {
                    id: "CAISEM82RcpmcFBM0TfOyiHV3es",
                    location_id: "057P5VYJ4A5X1",
                    reference_id: "my-order-001",
                    customer_id: "customer_id",
                    line_items: [
                        {
                            uid: "945986d1-9586-11e6-ad5a-28cfe92138cf",
                            name: "Awesome product",
                            quantity: "1",
                            base_price_money: { amount: BigInt(1599), currency: "USD" },
                            total_money: { amount: BigInt(1599), currency: "USD" },
                        },
                        {
                            uid: "a8f4168c-9586-11e6-bdf0-28cfe92138cf",
                            name: "Another awesome product",
                            quantity: "3",
                            base_price_money: { amount: BigInt(2000), currency: "USD" },
                            total_money: { amount: BigInt(6000), currency: "USD" },
                        },
                    ],
                    taxes: [{}],
                    discounts: [{}],
                    service_charges: [{}],
                    fulfillments: [{}],
                    returns: [{}],
                    tenders: [{ type: "CARD" }],
                    refunds: [
                        { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                    ],
                    created_at: "created_at",
                    updated_at: "updated_at",
                    closed_at: "closed_at",
                    state: "OPEN",
                    version: 1,
                    total_money: { amount: BigInt(7599), currency: "USD" },
                    ticket_name: "ticket_name",
                    rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                },
            ],
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .post("/v2/orders/batch-retrieve")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.batchGet({
            locationId: "057P5VYJ4A5X1",
            orderIds: ["CAISEM82RcpmcFBM0TfOyiHV3es", "CAISENgvlJ6jLWAzERDzjyHVybY"],
        });
        expect(response).toEqual({
            orders: [
                {
                    id: "CAISEM82RcpmcFBM0TfOyiHV3es",
                    locationId: "057P5VYJ4A5X1",
                    referenceId: "my-order-001",
                    customerId: "customer_id",
                    lineItems: [
                        {
                            uid: "945986d1-9586-11e6-ad5a-28cfe92138cf",
                            name: "Awesome product",
                            quantity: "1",
                            basePriceMoney: {
                                amount: BigInt("1599"),
                                currency: "USD",
                            },
                            totalMoney: {
                                amount: BigInt("1599"),
                                currency: "USD",
                            },
                        },
                        {
                            uid: "a8f4168c-9586-11e6-bdf0-28cfe92138cf",
                            name: "Another awesome product",
                            quantity: "3",
                            basePriceMoney: {
                                amount: BigInt("2000"),
                                currency: "USD",
                            },
                            totalMoney: {
                                amount: BigInt("6000"),
                                currency: "USD",
                            },
                        },
                    ],
                    taxes: [{}],
                    discounts: [{}],
                    serviceCharges: [{}],
                    fulfillments: [{}],
                    returns: [{}],
                    tenders: [
                        {
                            type: "CARD",
                        },
                    ],
                    refunds: [
                        {
                            id: "id",
                            locationId: "location_id",
                            reason: "reason",
                            amountMoney: {},
                            status: "PENDING",
                        },
                    ],
                    createdAt: "created_at",
                    updatedAt: "updated_at",
                    closedAt: "closed_at",
                    state: "OPEN",
                    version: 1,
                    totalMoney: {
                        amount: BigInt("7599"),
                        currency: "USD",
                    },
                    ticketName: "ticket_name",
                    rewards: [
                        {
                            id: "id",
                            rewardTierId: "reward_tier_id",
                        },
                    ],
                },
            ],
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("calculate", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            order: {
                location_id: "D7AVYMEAPJ3A3",
                line_items: [
                    { name: "Item 1", quantity: "1", base_price_money: { amount: BigInt(500), currency: "USD" } },
                    { name: "Item 2", quantity: "2", base_price_money: { amount: BigInt(300), currency: "USD" } },
                ],
                discounts: [{ name: "50% Off", percentage: "50", scope: "ORDER" }],
            },
        };
        const rawResponseBody = {
            order: {
                id: "id",
                location_id: "D7AVYMEAPJ3A3",
                reference_id: "reference_id",
                source: { name: "name" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "ULkg0tQTRK2bkU9fNv3IJD",
                        name: "Item 1",
                        quantity: "1",
                        applied_discounts: [
                            {
                                uid: "9zr9S4dxvPAixvn0lpa1VC",
                                discount_uid: "zGsRZP69aqSSR9lq9euSPB",
                                applied_money: { amount: BigInt(250), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(500), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(500), currency: "USD" },
                        gross_sales_money: { amount: BigInt(500), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(250), currency: "USD" },
                        total_money: { amount: BigInt(250), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "mumY8Nun4BC5aKe2yyx5a",
                        name: "Item 2",
                        quantity: "2",
                        applied_discounts: [
                            {
                                uid: "qa8LwwZK82FgSEkQc2HYVC",
                                discount_uid: "zGsRZP69aqSSR9lq9euSPB",
                                applied_money: { amount: BigInt(300), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(300), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(600), currency: "USD" },
                        gross_sales_money: { amount: BigInt(600), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(300), currency: "USD" },
                        total_money: { amount: BigInt(300), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [{}],
                discounts: [
                    {
                        uid: "zGsRZP69aqSSR9lq9euSPB",
                        name: "50% Off",
                        type: "FIXED_PERCENTAGE",
                        percentage: "50",
                        applied_money: { amount: BigInt(550), currency: "USD" },
                        scope: "ORDER",
                    },
                ],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(550), currency: "USD" },
                    tax_money: { amount: BigInt(0), currency: "USD" },
                    discount_money: { amount: BigInt(550), currency: "USD" },
                    tip_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [{ type: "CARD" }],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2020-05-18T16:30:49.614Z",
                updated_at: "2020-05-18T16:30:49.614Z",
                closed_at: "closed_at",
                state: "OPEN",
                version: 1,
                total_money: { amount: BigInt(550), currency: "USD" },
                total_tax_money: { amount: BigInt(0), currency: "USD" },
                total_discount_money: { amount: BigInt(550), currency: "USD" },
                total_tip_money: { amount: BigInt(0), currency: "USD" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .post("/v2/orders/calculate")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.calculate({
            order: {
                locationId: "D7AVYMEAPJ3A3",
                lineItems: [
                    {
                        name: "Item 1",
                        quantity: "1",
                        basePriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                    },
                    {
                        name: "Item 2",
                        quantity: "2",
                        basePriceMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                    },
                ],
                discounts: [
                    {
                        name: "50% Off",
                        percentage: "50",
                        scope: "ORDER",
                    },
                ],
            },
        });
        expect(response).toEqual({
            order: {
                id: "id",
                locationId: "D7AVYMEAPJ3A3",
                referenceId: "reference_id",
                source: {
                    name: "name",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "ULkg0tQTRK2bkU9fNv3IJD",
                        name: "Item 1",
                        quantity: "1",
                        appliedDiscounts: [
                            {
                                uid: "9zr9S4dxvPAixvn0lpa1VC",
                                discountUid: "zGsRZP69aqSSR9lq9euSPB",
                                appliedMoney: {
                                    amount: BigInt("250"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("250"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("250"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "mumY8Nun4BC5aKe2yyx5a",
                        name: "Item 2",
                        quantity: "2",
                        appliedDiscounts: [
                            {
                                uid: "qa8LwwZK82FgSEkQc2HYVC",
                                discountUid: "zGsRZP69aqSSR9lq9euSPB",
                                appliedMoney: {
                                    amount: BigInt("300"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("600"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("600"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [{}],
                discounts: [
                    {
                        uid: "zGsRZP69aqSSR9lq9euSPB",
                        name: "50% Off",
                        type: "FIXED_PERCENTAGE",
                        percentage: "50",
                        appliedMoney: {
                            amount: BigInt("550"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                ],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("550"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("550"),
                        currency: "USD",
                    },
                    tipMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        type: "CARD",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2020-05-18T16:30:49.614Z",
                updatedAt: "2020-05-18T16:30:49.614Z",
                closedAt: "closed_at",
                state: "OPEN",
                version: 1,
                totalMoney: {
                    amount: BigInt("550"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("550"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("clone", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            order_id: "ZAISEM52YcpmcWAzERDOyiWS123",
            version: 3,
            idempotency_key: "UNIQUE_STRING",
        };
        const rawResponseBody = {
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                location_id: "057P5VYJ4A5X1",
                reference_id: "my-order-001",
                source: { name: "My App" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "8uSwfzvUImn3IRrvciqlXC",
                        name: "New York Strip Steak",
                        quantity: "1",
                        applied_taxes: [
                            {
                                uid: "aKG87ArnDpvMLSZJHxWUl",
                                tax_uid: "state-sales-tax",
                                applied_money: { amount: BigInt(136), currency: "USD" },
                            },
                        ],
                        applied_discounts: [
                            {
                                uid: "jWdgP1TpHPFBuVrz81mXVC",
                                discount_uid: "membership-discount",
                                applied_money: { amount: BigInt(8), currency: "USD" },
                            },
                            {
                                uid: "jnZOjjVY57eRcQAVgEwFuC",
                                discount_uid: "labor-day-sale",
                                applied_money: { amount: BigInt(79), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(1599), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(1599), currency: "USD" },
                        gross_sales_money: { amount: BigInt(1599), currency: "USD" },
                        total_tax_money: { amount: BigInt(136), currency: "USD" },
                        total_discount_money: { amount: BigInt(87), currency: "USD" },
                        total_money: { amount: BigInt(1648), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "v8ZuEXpOJpb0bazLuvrLDB",
                        name: "New York Steak",
                        quantity: "2",
                        catalog_object_id: "BEMYCSMIJL46OCDV4KYIKXIB",
                        variation_name: "Larger",
                        modifiers: [
                            {
                                uid: "Lo3qMMckDluu9Qsb58d4CC",
                                catalog_object_id: "CHQX7Y4KY6N5KINJKZCFURPZ",
                                name: "Well",
                                base_price_money: { amount: BigInt(50), currency: "USD" },
                                total_price_money: { amount: BigInt(100), currency: "USD" },
                            },
                        ],
                        applied_taxes: [
                            {
                                uid: "v1dAgrfUVUPTnVTf9sRPz",
                                tax_uid: "state-sales-tax",
                                applied_money: { amount: BigInt(374), currency: "USD" },
                            },
                        ],
                        applied_discounts: [
                            {
                                uid: "nUXvdsIItfKko0dbYtY58C",
                                discount_uid: "membership-discount",
                                applied_money: { amount: BigInt(22), currency: "USD" },
                            },
                            {
                                uid: "qSdkOOOernlVQqsJ94SPjB",
                                discount_uid: "labor-day-sale",
                                applied_money: { amount: BigInt(224), currency: "USD" },
                            },
                            {
                                uid: "y7bVl4njrWAnfDwmz19izB",
                                discount_uid: "one-dollar-off",
                                applied_money: { amount: BigInt(100), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(2200), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(4400), currency: "USD" },
                        gross_sales_money: { amount: BigInt(4500), currency: "USD" },
                        total_tax_money: { amount: BigInt(374), currency: "USD" },
                        total_discount_money: { amount: BigInt(346), currency: "USD" },
                        total_money: { amount: BigInt(4528), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [
                    {
                        uid: "state-sales-tax",
                        name: "State Sales Tax",
                        type: "ADDITIVE",
                        percentage: "9",
                        applied_money: { amount: BigInt(510), currency: "USD" },
                        scope: "ORDER",
                    },
                ],
                discounts: [
                    {
                        uid: "membership-discount",
                        catalog_object_id: "DB7L55ZH2BGWI4H23ULIWOQ7",
                        name: "Membership Discount",
                        type: "FIXED_PERCENTAGE",
                        percentage: "0.5",
                        applied_money: { amount: BigInt(30), currency: "USD" },
                        scope: "ORDER",
                    },
                    {
                        uid: "labor-day-sale",
                        name: "Labor Day Sale",
                        type: "FIXED_PERCENTAGE",
                        percentage: "5",
                        applied_money: { amount: BigInt(303), currency: "USD" },
                        scope: "ORDER",
                    },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        type: "FIXED_AMOUNT",
                        amount_money: { amount: BigInt(100), currency: "USD" },
                        applied_money: { amount: BigInt(100), currency: "USD" },
                        scope: "LINE_ITEM",
                    },
                ],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(6176), currency: "USD" },
                    tax_money: { amount: BigInt(510), currency: "USD" },
                    discount_money: { amount: BigInt(433), currency: "USD" },
                    tip_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [{ type: "CARD" }],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2020-01-17T20:47:53.293Z",
                updated_at: "2020-01-17T20:47:53.293Z",
                closed_at: "closed_at",
                state: "DRAFT",
                version: 1,
                total_money: { amount: BigInt(6176), currency: "USD" },
                total_tax_money: { amount: BigInt(510), currency: "USD" },
                total_discount_money: { amount: BigInt(433), currency: "USD" },
                total_tip_money: { amount: BigInt(0), currency: "USD" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .post("/v2/orders/clone")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.clone({
            orderId: "ZAISEM52YcpmcWAzERDOyiWS123",
            version: 3,
            idempotencyKey: "UNIQUE_STRING",
        });
        expect(response).toEqual({
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                locationId: "057P5VYJ4A5X1",
                referenceId: "my-order-001",
                source: {
                    name: "My App",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "8uSwfzvUImn3IRrvciqlXC",
                        name: "New York Strip Steak",
                        quantity: "1",
                        appliedTaxes: [
                            {
                                uid: "aKG87ArnDpvMLSZJHxWUl",
                                taxUid: "state-sales-tax",
                                appliedMoney: {
                                    amount: BigInt("136"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedDiscounts: [
                            {
                                uid: "jWdgP1TpHPFBuVrz81mXVC",
                                discountUid: "membership-discount",
                                appliedMoney: {
                                    amount: BigInt("8"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "jnZOjjVY57eRcQAVgEwFuC",
                                discountUid: "labor-day-sale",
                                appliedMoney: {
                                    amount: BigInt("79"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("1599"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("136"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("87"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("1648"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "v8ZuEXpOJpb0bazLuvrLDB",
                        name: "New York Steak",
                        quantity: "2",
                        catalogObjectId: "BEMYCSMIJL46OCDV4KYIKXIB",
                        variationName: "Larger",
                        modifiers: [
                            {
                                uid: "Lo3qMMckDluu9Qsb58d4CC",
                                catalogObjectId: "CHQX7Y4KY6N5KINJKZCFURPZ",
                                name: "Well",
                                basePriceMoney: {
                                    amount: BigInt("50"),
                                    currency: "USD",
                                },
                                totalPriceMoney: {
                                    amount: BigInt("100"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedTaxes: [
                            {
                                uid: "v1dAgrfUVUPTnVTf9sRPz",
                                taxUid: "state-sales-tax",
                                appliedMoney: {
                                    amount: BigInt("374"),
                                    currency: "USD",
                                },
                            },
                        ],
                        appliedDiscounts: [
                            {
                                uid: "nUXvdsIItfKko0dbYtY58C",
                                discountUid: "membership-discount",
                                appliedMoney: {
                                    amount: BigInt("22"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "qSdkOOOernlVQqsJ94SPjB",
                                discountUid: "labor-day-sale",
                                appliedMoney: {
                                    amount: BigInt("224"),
                                    currency: "USD",
                                },
                            },
                            {
                                uid: "y7bVl4njrWAnfDwmz19izB",
                                discountUid: "one-dollar-off",
                                appliedMoney: {
                                    amount: BigInt("100"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("2200"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("4400"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("4500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("374"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("346"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("4528"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [
                    {
                        uid: "state-sales-tax",
                        name: "State Sales Tax",
                        type: "ADDITIVE",
                        percentage: "9",
                        appliedMoney: {
                            amount: BigInt("510"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                ],
                discounts: [
                    {
                        uid: "membership-discount",
                        catalogObjectId: "DB7L55ZH2BGWI4H23ULIWOQ7",
                        name: "Membership Discount",
                        type: "FIXED_PERCENTAGE",
                        percentage: "0.5",
                        appliedMoney: {
                            amount: BigInt("30"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                    {
                        uid: "labor-day-sale",
                        name: "Labor Day Sale",
                        type: "FIXED_PERCENTAGE",
                        percentage: "5",
                        appliedMoney: {
                            amount: BigInt("303"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                    {
                        uid: "one-dollar-off",
                        name: "Sale - $1.00 off",
                        type: "FIXED_AMOUNT",
                        amountMoney: {
                            amount: BigInt("100"),
                            currency: "USD",
                        },
                        appliedMoney: {
                            amount: BigInt("100"),
                            currency: "USD",
                        },
                        scope: "LINE_ITEM",
                    },
                ],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("6176"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("510"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("433"),
                        currency: "USD",
                    },
                    tipMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        type: "CARD",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2020-01-17T20:47:53.293Z",
                updatedAt: "2020-01-17T20:47:53.293Z",
                closedAt: "closed_at",
                state: "DRAFT",
                version: 1,
                totalMoney: {
                    amount: BigInt("6176"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("510"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("433"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                location_id: "D7AVYMEAPJ3A3",
                reference_id: "reference_id",
                source: { name: "name" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "ULkg0tQTRK2bkU9fNv3IJD",
                        name: "Item 1",
                        quantity: "1",
                        applied_discounts: [
                            {
                                uid: "9zr9S4dxvPAixvn0lpa1VC",
                                discount_uid: "zGsRZP69aqSSR9lq9euSPB",
                                applied_money: { amount: BigInt(250), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(500), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(500), currency: "USD" },
                        gross_sales_money: { amount: BigInt(500), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(250), currency: "USD" },
                        total_money: { amount: BigInt(250), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "mumY8Nun4BC5aKe2yyx5a",
                        name: "Item 2",
                        quantity: "2",
                        applied_discounts: [
                            {
                                uid: "qa8LwwZK82FgSEkQc2HYVC",
                                discount_uid: "zGsRZP69aqSSR9lq9euSPB",
                                applied_money: { amount: BigInt(300), currency: "USD" },
                            },
                        ],
                        base_price_money: { amount: BigInt(300), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(600), currency: "USD" },
                        gross_sales_money: { amount: BigInt(600), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(300), currency: "USD" },
                        total_money: { amount: BigInt(300), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [{}],
                discounts: [
                    {
                        uid: "zGsRZP69aqSSR9lq9euSPB",
                        name: "50% Off",
                        type: "FIXED_PERCENTAGE",
                        percentage: "50",
                        applied_money: { amount: BigInt(550), currency: "USD" },
                        scope: "ORDER",
                    },
                ],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(550), currency: "USD" },
                    tax_money: { amount: BigInt(0), currency: "USD" },
                    discount_money: { amount: BigInt(550), currency: "USD" },
                    tip_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [{ type: "CARD" }],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2020-05-18T16:30:49.614Z",
                updated_at: "2020-05-18T16:30:49.614Z",
                closed_at: "closed_at",
                state: "OPEN",
                version: 1,
                total_money: { amount: BigInt(550), currency: "USD" },
                total_tax_money: { amount: BigInt(0), currency: "USD" },
                total_discount_money: { amount: BigInt(550), currency: "USD" },
                total_tip_money: { amount: BigInt(0), currency: "USD" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .get("/v2/orders/order_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.get({
            orderId: "order_id",
        });
        expect(response).toEqual({
            order: {
                id: "CAISENgvlJ6jLWAzERDzjyHVybY",
                locationId: "D7AVYMEAPJ3A3",
                referenceId: "reference_id",
                source: {
                    name: "name",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "ULkg0tQTRK2bkU9fNv3IJD",
                        name: "Item 1",
                        quantity: "1",
                        appliedDiscounts: [
                            {
                                uid: "9zr9S4dxvPAixvn0lpa1VC",
                                discountUid: "zGsRZP69aqSSR9lq9euSPB",
                                appliedMoney: {
                                    amount: BigInt("250"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("250"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("250"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "mumY8Nun4BC5aKe2yyx5a",
                        name: "Item 2",
                        quantity: "2",
                        appliedDiscounts: [
                            {
                                uid: "qa8LwwZK82FgSEkQc2HYVC",
                                discountUid: "zGsRZP69aqSSR9lq9euSPB",
                                appliedMoney: {
                                    amount: BigInt("300"),
                                    currency: "USD",
                                },
                            },
                        ],
                        basePriceMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("600"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("600"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("300"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [{}],
                discounts: [
                    {
                        uid: "zGsRZP69aqSSR9lq9euSPB",
                        name: "50% Off",
                        type: "FIXED_PERCENTAGE",
                        percentage: "50",
                        appliedMoney: {
                            amount: BigInt("550"),
                            currency: "USD",
                        },
                        scope: "ORDER",
                    },
                ],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("550"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("550"),
                        currency: "USD",
                    },
                    tipMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        type: "CARD",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2020-05-18T16:30:49.614Z",
                updatedAt: "2020-05-18T16:30:49.614Z",
                closedAt: "closed_at",
                state: "OPEN",
                version: 1,
                totalMoney: {
                    amount: BigInt("550"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("550"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            order: {
                location_id: "location_id",
                line_items: [
                    {
                        uid: "cookie_uid",
                        name: "COOKIE",
                        quantity: "2",
                        base_price_money: { amount: BigInt(200), currency: "USD" },
                    },
                ],
                version: 1,
            },
            fields_to_clear: ["discounts"],
            idempotency_key: "UNIQUE_STRING",
        };
        const rawResponseBody = {
            order: {
                id: "DREk7wJcyXNHqULq8JJ2iPAsluJZY",
                location_id: "MXVQSVNDGN3C8",
                reference_id: "reference_id",
                source: { name: "Cookies" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "EuYkakhmu3ksHIds5Hiot",
                        name: "Small Coffee",
                        quantity: "1",
                        base_price_money: { amount: BigInt(500), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(500), currency: "USD" },
                        gross_sales_money: { amount: BigInt(500), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(0), currency: "USD" },
                        total_money: { amount: BigInt(500), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "cookie_uid",
                        name: "COOKIE",
                        quantity: "2",
                        base_price_money: { amount: BigInt(200), currency: "USD" },
                        variation_total_price_money: { amount: BigInt(400), currency: "USD" },
                        gross_sales_money: { amount: BigInt(400), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(0), currency: "USD" },
                        total_money: { amount: BigInt(400), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [{}],
                discounts: [{}],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(900), currency: "USD" },
                    tax_money: { amount: BigInt(0), currency: "USD" },
                    discount_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [{ type: "CARD" }],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2019-08-23T18:26:18.243Z",
                updated_at: "2019-08-23T18:33:47.523Z",
                closed_at: "closed_at",
                state: "OPEN",
                version: 2,
                total_money: { amount: BigInt(900), currency: "USD" },
                total_tax_money: { amount: BigInt(0), currency: "USD" },
                total_discount_money: { amount: BigInt(0), currency: "USD" },
                total_tip_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .put("/v2/orders/order_id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.update({
            orderId: "order_id",
            order: {
                locationId: "location_id",
                lineItems: [
                    {
                        uid: "cookie_uid",
                        name: "COOKIE",
                        quantity: "2",
                        basePriceMoney: {
                            amount: BigInt("200"),
                            currency: "USD",
                        },
                    },
                ],
                version: 1,
            },
            fieldsToClear: ["discounts"],
            idempotencyKey: "UNIQUE_STRING",
        });
        expect(response).toEqual({
            order: {
                id: "DREk7wJcyXNHqULq8JJ2iPAsluJZY",
                locationId: "MXVQSVNDGN3C8",
                referenceId: "reference_id",
                source: {
                    name: "Cookies",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "EuYkakhmu3ksHIds5Hiot",
                        name: "Small Coffee",
                        quantity: "1",
                        basePriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "cookie_uid",
                        name: "COOKIE",
                        quantity: "2",
                        basePriceMoney: {
                            amount: BigInt("200"),
                            currency: "USD",
                        },
                        variationTotalPriceMoney: {
                            amount: BigInt("400"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("400"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("400"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [{}],
                discounts: [{}],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("900"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        type: "CARD",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2019-08-23T18:26:18.243Z",
                updatedAt: "2019-08-23T18:33:47.523Z",
                closedAt: "closed_at",
                state: "OPEN",
                version: 2,
                totalMoney: {
                    amount: BigInt("900"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("pay", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            idempotency_key: "c043a359-7ad9-4136-82a9-c3f1d66dcbff",
            payment_ids: ["EnZdNAlWCmfh6Mt5FMNST1o7taB", "0LRiVlbXVwe8ozu4KbZxd12mvaB"],
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            order: {
                id: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                location_id: "P3CCK6HSNDAS7",
                reference_id: "reference_id",
                source: { name: "Source Name" },
                customer_id: "customer_id",
                line_items: [
                    {
                        uid: "QW6kofLHJK7JEKMjlSVP5C",
                        name: "Item 1",
                        quantity: "1",
                        base_price_money: { amount: BigInt(500), currency: "USD" },
                        gross_sales_money: { amount: BigInt(500), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(0), currency: "USD" },
                        total_money: { amount: BigInt(500), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                    {
                        uid: "zhw8MNfRGdFQMI2WE1UBJD",
                        name: "Item 2",
                        quantity: "2",
                        base_price_money: { amount: BigInt(750), currency: "USD" },
                        gross_sales_money: { amount: BigInt(1500), currency: "USD" },
                        total_tax_money: { amount: BigInt(0), currency: "USD" },
                        total_discount_money: { amount: BigInt(0), currency: "USD" },
                        total_money: { amount: BigInt(1500), currency: "USD" },
                        total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                    },
                ],
                taxes: [{}],
                discounts: [{}],
                service_charges: [{}],
                fulfillments: [{}],
                returns: [{}],
                net_amounts: {
                    total_money: { amount: BigInt(2000), currency: "USD" },
                    tax_money: { amount: BigInt(0), currency: "USD" },
                    discount_money: { amount: BigInt(0), currency: "USD" },
                    tip_money: { amount: BigInt(0), currency: "USD" },
                    service_charge_money: { amount: BigInt(0), currency: "USD" },
                },
                rounding_adjustment: { uid: "uid", name: "name" },
                tenders: [
                    {
                        id: "EnZdNAlWCmfh6Mt5FMNST1o7taB",
                        location_id: "P3CCK6HSNDAS7",
                        transaction_id: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                        created_at: "2019-08-06T02:47:36.293Z",
                        amount_money: { amount: BigInt(1000), currency: "USD" },
                        type: "CARD",
                        card_details: {
                            status: "CAPTURED",
                            card: {
                                card_brand: "VISA",
                                last_4: "1111",
                                exp_month: BigInt(2),
                                exp_year: BigInt(2022),
                                fingerprint: "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ",
                            },
                            entry_method: "KEYED",
                        },
                        payment_id: "EnZdNAlWCmfh6Mt5FMNST1o7taB",
                    },
                    {
                        id: "0LRiVlbXVwe8ozu4KbZxd12mvaB",
                        location_id: "P3CCK6HSNDAS7",
                        transaction_id: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                        created_at: "2019-08-06T02:47:36.809Z",
                        amount_money: { amount: BigInt(1000), currency: "USD" },
                        type: "CARD",
                        card_details: {
                            status: "CAPTURED",
                            card: {
                                card_brand: "VISA",
                                last_4: "1111",
                                exp_month: BigInt(2),
                                exp_year: BigInt(2022),
                                fingerprint: "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ",
                            },
                            entry_method: "KEYED",
                        },
                        payment_id: "0LRiVlbXVwe8ozu4KbZxd12mvaB",
                    },
                ],
                refunds: [
                    { id: "id", location_id: "location_id", reason: "reason", amount_money: {}, status: "PENDING" },
                ],
                metadata: { key: "value" },
                created_at: "2019-08-06T02:47:35.693Z",
                updated_at: "2019-08-06T02:47:37.140Z",
                closed_at: "2019-08-06T02:47:37.140Z",
                state: "COMPLETED",
                version: 4,
                total_money: { amount: BigInt(2000), currency: "USD" },
                total_tax_money: { amount: BigInt(0), currency: "USD" },
                total_discount_money: { amount: BigInt(0), currency: "USD" },
                total_tip_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
                total_service_charge_money: { amount: BigInt(0), currency: "USD" },
                ticket_name: "ticket_name",
                pricing_options: { auto_apply_discounts: true, auto_apply_taxes: true },
                rewards: [{ id: "id", reward_tier_id: "reward_tier_id" }],
                net_amount_due_money: { amount: BigInt(1000000), currency: "UNKNOWN_CURRENCY" },
            },
        };
        server
            .mockEndpoint()
            .post("/v2/orders/order_id/pay")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.orders.pay({
            orderId: "order_id",
            idempotencyKey: "c043a359-7ad9-4136-82a9-c3f1d66dcbff",
            paymentIds: ["EnZdNAlWCmfh6Mt5FMNST1o7taB", "0LRiVlbXVwe8ozu4KbZxd12mvaB"],
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            order: {
                id: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                locationId: "P3CCK6HSNDAS7",
                referenceId: "reference_id",
                source: {
                    name: "Source Name",
                },
                customerId: "customer_id",
                lineItems: [
                    {
                        uid: "QW6kofLHJK7JEKMjlSVP5C",
                        name: "Item 1",
                        quantity: "1",
                        basePriceMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("500"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                    {
                        uid: "zhw8MNfRGdFQMI2WE1UBJD",
                        name: "Item 2",
                        quantity: "2",
                        basePriceMoney: {
                            amount: BigInt("750"),
                            currency: "USD",
                        },
                        grossSalesMoney: {
                            amount: BigInt("1500"),
                            currency: "USD",
                        },
                        totalTaxMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalDiscountMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                        totalMoney: {
                            amount: BigInt("1500"),
                            currency: "USD",
                        },
                        totalServiceChargeMoney: {
                            amount: BigInt("0"),
                            currency: "USD",
                        },
                    },
                ],
                taxes: [{}],
                discounts: [{}],
                serviceCharges: [{}],
                fulfillments: [{}],
                returns: [{}],
                netAmounts: {
                    totalMoney: {
                        amount: BigInt("2000"),
                        currency: "USD",
                    },
                    taxMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    discountMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    tipMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                    serviceChargeMoney: {
                        amount: BigInt("0"),
                        currency: "USD",
                    },
                },
                roundingAdjustment: {
                    uid: "uid",
                    name: "name",
                },
                tenders: [
                    {
                        id: "EnZdNAlWCmfh6Mt5FMNST1o7taB",
                        locationId: "P3CCK6HSNDAS7",
                        transactionId: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                        createdAt: "2019-08-06T02:47:36.293Z",
                        amountMoney: {
                            amount: BigInt("1000"),
                            currency: "USD",
                        },
                        type: "CARD",
                        cardDetails: {
                            status: "CAPTURED",
                            card: {
                                cardBrand: "VISA",
                                last4: "1111",
                                expMonth: BigInt("2"),
                                expYear: BigInt("2022"),
                                fingerprint: "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ",
                            },
                            entryMethod: "KEYED",
                        },
                        paymentId: "EnZdNAlWCmfh6Mt5FMNST1o7taB",
                    },
                    {
                        id: "0LRiVlbXVwe8ozu4KbZxd12mvaB",
                        locationId: "P3CCK6HSNDAS7",
                        transactionId: "lgwOlEityYPJtcuvKTVKT1pA986YY",
                        createdAt: "2019-08-06T02:47:36.809Z",
                        amountMoney: {
                            amount: BigInt("1000"),
                            currency: "USD",
                        },
                        type: "CARD",
                        cardDetails: {
                            status: "CAPTURED",
                            card: {
                                cardBrand: "VISA",
                                last4: "1111",
                                expMonth: BigInt("2"),
                                expYear: BigInt("2022"),
                                fingerprint: "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ",
                            },
                            entryMethod: "KEYED",
                        },
                        paymentId: "0LRiVlbXVwe8ozu4KbZxd12mvaB",
                    },
                ],
                refunds: [
                    {
                        id: "id",
                        locationId: "location_id",
                        reason: "reason",
                        amountMoney: {},
                        status: "PENDING",
                    },
                ],
                metadata: {
                    key: "value",
                },
                createdAt: "2019-08-06T02:47:35.693Z",
                updatedAt: "2019-08-06T02:47:37.140Z",
                closedAt: "2019-08-06T02:47:37.140Z",
                state: "COMPLETED",
                version: 4,
                totalMoney: {
                    amount: BigInt("2000"),
                    currency: "USD",
                },
                totalTaxMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalDiscountMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                totalTipMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
                totalServiceChargeMoney: {
                    amount: BigInt("0"),
                    currency: "USD",
                },
                ticketName: "ticket_name",
                pricingOptions: {
                    autoApplyDiscounts: true,
                    autoApplyTaxes: true,
                },
                rewards: [
                    {
                        id: "id",
                        rewardTierId: "reward_tier_id",
                    },
                ],
                netAmountDueMoney: {
                    amount: BigInt("1000000"),
                    currency: "UNKNOWN_CURRENCY",
                },
            },
        });
    });
});
