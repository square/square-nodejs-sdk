/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { SquareClient } from "../../../src/Client";

describe("WageSetting", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            wage_setting: {
                team_member_id: "1yJlHapkseYnNPETIU1B",
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        hourly_rate: { amount: BigInt(2164), currency: "USD" },
                        annual_rate: { amount: BigInt(4500000), currency: "USD" },
                        weekly_hours: 40,
                    },
                ],
                is_overtime_exempt: false,
                version: 1,
                created_at: "2020-06-11T23:01:21+00:00",
                updated_at: "2020-06-11T23:01:21+00:00",
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .get("/v2/team-members/team_member_id/wage-setting")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.teamMembers.wageSetting.get({
            team_member_id: "team_member_id",
        });
        expect(response).toEqual({
            wage_setting: {
                team_member_id: "1yJlHapkseYnNPETIU1B",
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        hourly_rate: {
                            amount: BigInt("2164"),
                            currency: "USD",
                        },
                        annual_rate: {
                            amount: BigInt("4500000"),
                            currency: "USD",
                        },
                        weekly_hours: 40,
                    },
                ],
                is_overtime_exempt: false,
                version: 1,
                created_at: "2020-06-11T23:01:21+00:00",
                updated_at: "2020-06-11T23:01:21+00:00",
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            wage_setting: {
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        annual_rate: { amount: BigInt(3000000), currency: "USD" },
                        weekly_hours: 40,
                    },
                    {
                        job_title: "Cashier",
                        pay_type: "HOURLY",
                        hourly_rate: { amount: BigInt(2000), currency: "USD" },
                    },
                ],
                is_overtime_exempt: true,
            },
        };
        const rawResponseBody = {
            wage_setting: {
                team_member_id: "-3oZQKPKVk6gUXU_V5Qa",
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        hourly_rate: { amount: BigInt(1443), currency: "USD" },
                        annual_rate: { amount: BigInt(3000000), currency: "USD" },
                        weekly_hours: 40,
                    },
                    {
                        job_title: "Cashier",
                        pay_type: "HOURLY",
                        hourly_rate: { amount: BigInt(2000), currency: "USD" },
                    },
                ],
                is_overtime_exempt: true,
                version: 1,
                created_at: "2019-07-10T17:26:48+00:00",
                updated_at: "2020-06-11T23:12:04+00:00",
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .put("/v2/team-members/team_member_id/wage-setting")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.teamMembers.wageSetting.update({
            team_member_id: "team_member_id",
            wage_setting: {
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        annual_rate: {
                            amount: BigInt("3000000"),
                            currency: "USD",
                        },
                        weekly_hours: 40,
                    },
                    {
                        job_title: "Cashier",
                        pay_type: "HOURLY",
                        hourly_rate: {
                            amount: BigInt("2000"),
                            currency: "USD",
                        },
                    },
                ],
                is_overtime_exempt: true,
            },
        });
        expect(response).toEqual({
            wage_setting: {
                team_member_id: "-3oZQKPKVk6gUXU_V5Qa",
                job_assignments: [
                    {
                        job_title: "Manager",
                        pay_type: "SALARY",
                        hourly_rate: {
                            amount: BigInt("1443"),
                            currency: "USD",
                        },
                        annual_rate: {
                            amount: BigInt("3000000"),
                            currency: "USD",
                        },
                        weekly_hours: 40,
                    },
                    {
                        job_title: "Cashier",
                        pay_type: "HOURLY",
                        hourly_rate: {
                            amount: BigInt("2000"),
                            currency: "USD",
                        },
                    },
                ],
                is_overtime_exempt: true,
                version: 1,
                created_at: "2019-07-10T17:26:48+00:00",
                updated_at: "2020-06-11T23:12:04+00:00",
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });
});
