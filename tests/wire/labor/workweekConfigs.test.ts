/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { SquareClient } from "../../../src/Client";

describe("WorkweekConfigs", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            workweek_config: { start_of_week: "MON", start_of_day_local_time: "10:00", version: 10 },
        };
        const rawResponseBody = {
            workweek_config: {
                id: "FY4VCAQN700GM",
                start_of_week: "MON",
                start_of_day_local_time: "10:00",
                version: 11,
                created_at: "2016-02-04T00:58:24Z",
                updated_at: "2019-02-28T01:04:35Z",
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .put("/v2/labor/workweek-configs/id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.labor.workweekConfigs.get({
            id: "id",
            workweekConfig: {
                startOfWeek: "MON",
                startOfDayLocalTime: "10:00",
                version: 10,
            },
        });
        expect(response).toEqual({
            workweekConfig: {
                id: "FY4VCAQN700GM",
                startOfWeek: "MON",
                startOfDayLocalTime: "10:00",
                version: 11,
                createdAt: "2016-02-04T00:58:24Z",
                updatedAt: "2019-02-28T01:04:35Z",
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });
});
