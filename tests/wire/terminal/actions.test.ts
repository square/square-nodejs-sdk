// This file was auto-generated by Fern from our API Definition.

import { SquareClient } from "../../../src/Client";
import { mockServerPool } from "../../mock-server/MockServerPool";

describe("Actions", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            idempotency_key: "thahn-70e75c10-47f7-4ab6-88cc-aaa4076d065e",
            action: {
                device_id: "{{DEVICE_ID}}",
                deadline_duration: "PT5M",
                type: "SAVE_CARD",
                save_card_options: { customer_id: "{{CUSTOMER_ID}}", reference_id: "user-id-1" },
            },
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                device_id: "DEVICE_ID",
                deadline_duration: "PT5M",
                status: "PENDING",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2021-07-28T23:22:07.476Z",
                updated_at: "2021-07-28T23:22:07.476Z",
                app_id: "APP_ID",
                location_id: "LOCATION_ID",
                type: "SAVE_CARD",
                qr_code_options: { title: "title", body: "body", barcode_contents: "barcode_contents" },
                save_card_options: { customer_id: "CUSTOMER_ID", card_id: "card_id", reference_id: "user-id-1" },
                signature_options: { title: "title", body: "body", signature: [{}] },
                confirmation_options: {
                    title: "title",
                    body: "body",
                    agree_button_text: "agree_button_text",
                    disagree_button_text: "disagree_button_text",
                },
                receipt_options: { payment_id: "payment_id", print_only: true, is_duplicate: true },
                data_collection_options: { title: "title", body: "body", input_type: "EMAIL" },
                select_options: {
                    title: "title",
                    body: "body",
                    options: [{ reference_id: "reference_id", title: "title" }],
                    selected_option: { reference_id: "reference_id", title: "title" },
                },
                device_metadata: {
                    battery_percentage: "battery_percentage",
                    charging_state: "charging_state",
                    location_id: "location_id",
                    merchant_id: "merchant_id",
                    network_connection_type: "network_connection_type",
                    payment_region: "payment_region",
                    serial_number: "serial_number",
                    os_version: "os_version",
                    app_version: "app_version",
                    wifi_network_name: "wifi_network_name",
                    wifi_network_strength: "wifi_network_strength",
                    ip_address: "ip_address",
                },
                await_next_action: true,
                await_next_action_duration: "await_next_action_duration",
            },
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/actions")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.actions.create({
            idempotencyKey: "thahn-70e75c10-47f7-4ab6-88cc-aaa4076d065e",
            action: {
                deviceId: "{{DEVICE_ID}}",
                deadlineDuration: "PT5M",
                type: "SAVE_CARD",
                saveCardOptions: {
                    customerId: "{{CUSTOMER_ID}}",
                    referenceId: "user-id-1",
                },
            },
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                deviceId: "DEVICE_ID",
                deadlineDuration: "PT5M",
                status: "PENDING",
                cancelReason: "BUYER_CANCELED",
                createdAt: "2021-07-28T23:22:07.476Z",
                updatedAt: "2021-07-28T23:22:07.476Z",
                appId: "APP_ID",
                locationId: "LOCATION_ID",
                type: "SAVE_CARD",
                qrCodeOptions: {
                    title: "title",
                    body: "body",
                    barcodeContents: "barcode_contents",
                },
                saveCardOptions: {
                    customerId: "CUSTOMER_ID",
                    cardId: "card_id",
                    referenceId: "user-id-1",
                },
                signatureOptions: {
                    title: "title",
                    body: "body",
                    signature: [{}],
                },
                confirmationOptions: {
                    title: "title",
                    body: "body",
                    agreeButtonText: "agree_button_text",
                    disagreeButtonText: "disagree_button_text",
                },
                receiptOptions: {
                    paymentId: "payment_id",
                    printOnly: true,
                    isDuplicate: true,
                },
                dataCollectionOptions: {
                    title: "title",
                    body: "body",
                    inputType: "EMAIL",
                },
                selectOptions: {
                    title: "title",
                    body: "body",
                    options: [
                        {
                            referenceId: "reference_id",
                            title: "title",
                        },
                    ],
                    selectedOption: {
                        referenceId: "reference_id",
                        title: "title",
                    },
                },
                deviceMetadata: {
                    batteryPercentage: "battery_percentage",
                    chargingState: "charging_state",
                    locationId: "location_id",
                    merchantId: "merchant_id",
                    networkConnectionType: "network_connection_type",
                    paymentRegion: "payment_region",
                    serialNumber: "serial_number",
                    osVersion: "os_version",
                    appVersion: "app_version",
                    wifiNetworkName: "wifi_network_name",
                    wifiNetworkStrength: "wifi_network_strength",
                    ipAddress: "ip_address",
                },
                awaitNextAction: true,
                awaitNextActionDuration: "await_next_action_duration",
            },
        });
    });

    test("search", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            query: { filter: { created_at: { start_at: "2022-04-01T00:00:00.000Z" } }, sort: { sort_order: "DESC" } },
            limit: 2,
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            action: [
                {
                    id: "termapia:oBGWlAats8xWCiCE",
                    device_id: "DEVICE_ID",
                    deadline_duration: "PT5M",
                    status: "IN_PROGRESS",
                    cancel_reason: "BUYER_CANCELED",
                    created_at: "2022-04-08T15:14:04.895Z",
                    updated_at: "2022-04-08T15:14:05.446Z",
                    app_id: "APP_ID",
                    location_id: "LOCATION_ID",
                    type: "SAVE_CARD",
                    qr_code_options: { title: "title", body: "body", barcode_contents: "barcode_contents" },
                    save_card_options: { customer_id: "CUSTOMER_ID", reference_id: "user-id-1" },
                    signature_options: { title: "title", body: "body" },
                    confirmation_options: { title: "title", body: "body", agree_button_text: "agree_button_text" },
                    receipt_options: { payment_id: "payment_id" },
                    data_collection_options: { title: "title", body: "body", input_type: "EMAIL" },
                    select_options: {
                        title: "title",
                        body: "body",
                        options: [{ reference_id: "reference_id", title: "title" }],
                    },
                    await_next_action: true,
                    await_next_action_duration: "await_next_action_duration",
                },
                {
                    id: "termapia:K2NY2YSSml3lTiCE",
                    device_id: "DEVICE_ID",
                    deadline_duration: "PT5M",
                    status: "COMPLETED",
                    cancel_reason: "BUYER_CANCELED",
                    created_at: "2022-04-08T15:14:01.210Z",
                    updated_at: "2022-04-08T15:14:09.861Z",
                    app_id: "APP_ID",
                    location_id: "LOCATION_ID",
                    type: "SAVE_CARD",
                    qr_code_options: { title: "title", body: "body", barcode_contents: "barcode_contents" },
                    save_card_options: {
                        customer_id: "CUSTOMER_ID",
                        card_id: "ccof:CARD_ID",
                        reference_id: "user-id-1",
                    },
                    signature_options: { title: "title", body: "body" },
                    confirmation_options: { title: "title", body: "body", agree_button_text: "agree_button_text" },
                    receipt_options: { payment_id: "payment_id" },
                    data_collection_options: { title: "title", body: "body", input_type: "EMAIL" },
                    select_options: {
                        title: "title",
                        body: "body",
                        options: [{ reference_id: "reference_id", title: "title" }],
                    },
                    await_next_action: true,
                    await_next_action_duration: "await_next_action_duration",
                },
            ],
            cursor: "CURSOR",
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/actions/search")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.actions.search({
            query: {
                filter: {
                    createdAt: {
                        startAt: "2022-04-01T00:00:00.000Z",
                    },
                },
                sort: {
                    sortOrder: "DESC",
                },
            },
            limit: 2,
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            action: [
                {
                    id: "termapia:oBGWlAats8xWCiCE",
                    deviceId: "DEVICE_ID",
                    deadlineDuration: "PT5M",
                    status: "IN_PROGRESS",
                    cancelReason: "BUYER_CANCELED",
                    createdAt: "2022-04-08T15:14:04.895Z",
                    updatedAt: "2022-04-08T15:14:05.446Z",
                    appId: "APP_ID",
                    locationId: "LOCATION_ID",
                    type: "SAVE_CARD",
                    qrCodeOptions: {
                        title: "title",
                        body: "body",
                        barcodeContents: "barcode_contents",
                    },
                    saveCardOptions: {
                        customerId: "CUSTOMER_ID",
                        referenceId: "user-id-1",
                    },
                    signatureOptions: {
                        title: "title",
                        body: "body",
                    },
                    confirmationOptions: {
                        title: "title",
                        body: "body",
                        agreeButtonText: "agree_button_text",
                    },
                    receiptOptions: {
                        paymentId: "payment_id",
                    },
                    dataCollectionOptions: {
                        title: "title",
                        body: "body",
                        inputType: "EMAIL",
                    },
                    selectOptions: {
                        title: "title",
                        body: "body",
                        options: [
                            {
                                referenceId: "reference_id",
                                title: "title",
                            },
                        ],
                    },
                    awaitNextAction: true,
                    awaitNextActionDuration: "await_next_action_duration",
                },
                {
                    id: "termapia:K2NY2YSSml3lTiCE",
                    deviceId: "DEVICE_ID",
                    deadlineDuration: "PT5M",
                    status: "COMPLETED",
                    cancelReason: "BUYER_CANCELED",
                    createdAt: "2022-04-08T15:14:01.210Z",
                    updatedAt: "2022-04-08T15:14:09.861Z",
                    appId: "APP_ID",
                    locationId: "LOCATION_ID",
                    type: "SAVE_CARD",
                    qrCodeOptions: {
                        title: "title",
                        body: "body",
                        barcodeContents: "barcode_contents",
                    },
                    saveCardOptions: {
                        customerId: "CUSTOMER_ID",
                        cardId: "ccof:CARD_ID",
                        referenceId: "user-id-1",
                    },
                    signatureOptions: {
                        title: "title",
                        body: "body",
                    },
                    confirmationOptions: {
                        title: "title",
                        body: "body",
                        agreeButtonText: "agree_button_text",
                    },
                    receiptOptions: {
                        paymentId: "payment_id",
                    },
                    dataCollectionOptions: {
                        title: "title",
                        body: "body",
                        inputType: "EMAIL",
                    },
                    selectOptions: {
                        title: "title",
                        body: "body",
                        options: [
                            {
                                referenceId: "reference_id",
                                title: "title",
                            },
                        ],
                    },
                    awaitNextAction: true,
                    awaitNextActionDuration: "await_next_action_duration",
                },
            ],
            cursor: "CURSOR",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                device_id: "DEVICE_ID",
                deadline_duration: "PT5M",
                status: "IN_PROGRESS",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2021-07-28T23:22:07.476Z",
                updated_at: "2021-07-28T23:22:08.301Z",
                app_id: "APP_ID",
                location_id: "LOCATION_ID",
                type: "SAVE_CARD",
                qr_code_options: { title: "title", body: "body", barcode_contents: "barcode_contents" },
                save_card_options: { customer_id: "CUSTOMER_ID", card_id: "card_id", reference_id: "user-id-1" },
                signature_options: { title: "title", body: "body", signature: [{}] },
                confirmation_options: {
                    title: "title",
                    body: "body",
                    agree_button_text: "agree_button_text",
                    disagree_button_text: "disagree_button_text",
                },
                receipt_options: { payment_id: "payment_id", print_only: true, is_duplicate: true },
                data_collection_options: { title: "title", body: "body", input_type: "EMAIL" },
                select_options: {
                    title: "title",
                    body: "body",
                    options: [{ reference_id: "reference_id", title: "title" }],
                    selected_option: { reference_id: "reference_id", title: "title" },
                },
                device_metadata: {
                    battery_percentage: "battery_percentage",
                    charging_state: "charging_state",
                    location_id: "location_id",
                    merchant_id: "merchant_id",
                    network_connection_type: "network_connection_type",
                    payment_region: "payment_region",
                    serial_number: "serial_number",
                    os_version: "os_version",
                    app_version: "app_version",
                    wifi_network_name: "wifi_network_name",
                    wifi_network_strength: "wifi_network_strength",
                    ip_address: "ip_address",
                },
                await_next_action: true,
                await_next_action_duration: "await_next_action_duration",
            },
        };
        server
            .mockEndpoint()
            .get("/v2/terminals/actions/action_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.actions.get({
            actionId: "action_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                deviceId: "DEVICE_ID",
                deadlineDuration: "PT5M",
                status: "IN_PROGRESS",
                cancelReason: "BUYER_CANCELED",
                createdAt: "2021-07-28T23:22:07.476Z",
                updatedAt: "2021-07-28T23:22:08.301Z",
                appId: "APP_ID",
                locationId: "LOCATION_ID",
                type: "SAVE_CARD",
                qrCodeOptions: {
                    title: "title",
                    body: "body",
                    barcodeContents: "barcode_contents",
                },
                saveCardOptions: {
                    customerId: "CUSTOMER_ID",
                    cardId: "card_id",
                    referenceId: "user-id-1",
                },
                signatureOptions: {
                    title: "title",
                    body: "body",
                    signature: [{}],
                },
                confirmationOptions: {
                    title: "title",
                    body: "body",
                    agreeButtonText: "agree_button_text",
                    disagreeButtonText: "disagree_button_text",
                },
                receiptOptions: {
                    paymentId: "payment_id",
                    printOnly: true,
                    isDuplicate: true,
                },
                dataCollectionOptions: {
                    title: "title",
                    body: "body",
                    inputType: "EMAIL",
                },
                selectOptions: {
                    title: "title",
                    body: "body",
                    options: [
                        {
                            referenceId: "reference_id",
                            title: "title",
                        },
                    ],
                    selectedOption: {
                        referenceId: "reference_id",
                        title: "title",
                    },
                },
                deviceMetadata: {
                    batteryPercentage: "battery_percentage",
                    chargingState: "charging_state",
                    locationId: "location_id",
                    merchantId: "merchant_id",
                    networkConnectionType: "network_connection_type",
                    paymentRegion: "payment_region",
                    serialNumber: "serial_number",
                    osVersion: "os_version",
                    appVersion: "app_version",
                    wifiNetworkName: "wifi_network_name",
                    wifiNetworkStrength: "wifi_network_strength",
                    ipAddress: "ip_address",
                },
                awaitNextAction: true,
                awaitNextActionDuration: "await_next_action_duration",
            },
        });
    });

    test("cancel", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                device_id: "DEVICE_ID",
                deadline_duration: "PT5M",
                status: "CANCELED",
                cancel_reason: "SELLER_CANCELED",
                created_at: "2021-07-28T23:22:07.476Z",
                updated_at: "2021-07-28T23:22:29.511Z",
                app_id: "APP_ID",
                location_id: "LOCATION_ID",
                type: "SAVE_CARD",
                qr_code_options: { title: "title", body: "body", barcode_contents: "barcode_contents" },
                save_card_options: { customer_id: "CUSTOMER_ID", card_id: "card_id", reference_id: "user-id-1" },
                signature_options: { title: "title", body: "body", signature: [{}] },
                confirmation_options: {
                    title: "title",
                    body: "body",
                    agree_button_text: "agree_button_text",
                    disagree_button_text: "disagree_button_text",
                },
                receipt_options: { payment_id: "payment_id", print_only: true, is_duplicate: true },
                data_collection_options: { title: "title", body: "body", input_type: "EMAIL" },
                select_options: {
                    title: "title",
                    body: "body",
                    options: [{ reference_id: "reference_id", title: "title" }],
                    selected_option: { reference_id: "reference_id", title: "title" },
                },
                device_metadata: {
                    battery_percentage: "battery_percentage",
                    charging_state: "charging_state",
                    location_id: "location_id",
                    merchant_id: "merchant_id",
                    network_connection_type: "network_connection_type",
                    payment_region: "payment_region",
                    serial_number: "serial_number",
                    os_version: "os_version",
                    app_version: "app_version",
                    wifi_network_name: "wifi_network_name",
                    wifi_network_strength: "wifi_network_strength",
                    ip_address: "ip_address",
                },
                await_next_action: true,
                await_next_action_duration: "await_next_action_duration",
            },
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/actions/action_id/cancel")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.actions.cancel({
            actionId: "action_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            action: {
                id: "termapia:jveJIAkkAjILHkdCE",
                deviceId: "DEVICE_ID",
                deadlineDuration: "PT5M",
                status: "CANCELED",
                cancelReason: "SELLER_CANCELED",
                createdAt: "2021-07-28T23:22:07.476Z",
                updatedAt: "2021-07-28T23:22:29.511Z",
                appId: "APP_ID",
                locationId: "LOCATION_ID",
                type: "SAVE_CARD",
                qrCodeOptions: {
                    title: "title",
                    body: "body",
                    barcodeContents: "barcode_contents",
                },
                saveCardOptions: {
                    customerId: "CUSTOMER_ID",
                    cardId: "card_id",
                    referenceId: "user-id-1",
                },
                signatureOptions: {
                    title: "title",
                    body: "body",
                    signature: [{}],
                },
                confirmationOptions: {
                    title: "title",
                    body: "body",
                    agreeButtonText: "agree_button_text",
                    disagreeButtonText: "disagree_button_text",
                },
                receiptOptions: {
                    paymentId: "payment_id",
                    printOnly: true,
                    isDuplicate: true,
                },
                dataCollectionOptions: {
                    title: "title",
                    body: "body",
                    inputType: "EMAIL",
                },
                selectOptions: {
                    title: "title",
                    body: "body",
                    options: [
                        {
                            referenceId: "reference_id",
                            title: "title",
                        },
                    ],
                    selectedOption: {
                        referenceId: "reference_id",
                        title: "title",
                    },
                },
                deviceMetadata: {
                    batteryPercentage: "battery_percentage",
                    chargingState: "charging_state",
                    locationId: "location_id",
                    merchantId: "merchant_id",
                    networkConnectionType: "network_connection_type",
                    paymentRegion: "payment_region",
                    serialNumber: "serial_number",
                    osVersion: "os_version",
                    appVersion: "app_version",
                    wifiNetworkName: "wifi_network_name",
                    wifiNetworkStrength: "wifi_network_strength",
                    ipAddress: "ip_address",
                },
                awaitNextAction: true,
                awaitNextActionDuration: "await_next_action_duration",
            },
        });
    });
});
