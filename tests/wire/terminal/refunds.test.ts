/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { SquareClient } from "../../../src/Client";

describe("Refunds", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            idempotency_key: "402a640b-b26f-401f-b406-46f839590c04",
            refund: {
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                amount_money: { amount: BigInt(111), currency: "CAD" },
                reason: "Returning items",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
            },
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            refund: {
                id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "refund_id",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: { amount: BigInt(111), currency: "CAD" },
                reason: "Returning items",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                deadline_duration: "PT5M",
                status: "PENDING",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2020-09-29T15:21:46.771Z",
                updated_at: "2020-09-29T15:21:46.771Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/refunds")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.refunds.create({
            idempotency_key: "402a640b-b26f-401f-b406-46f839590c04",
            refund: {
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                amount_money: {
                    amount: BigInt("111"),
                    currency: "CAD",
                },
                reason: "Returning items",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
            },
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            refund: {
                id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "refund_id",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: {
                    amount: BigInt("111"),
                    currency: "CAD",
                },
                reason: "Returning items",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                deadline_duration: "PT5M",
                status: "PENDING",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2020-09-29T15:21:46.771Z",
                updated_at: "2020-09-29T15:21:46.771Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        });
    });

    test("search", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { query: { filter: { status: "COMPLETED" } }, limit: 1 };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            refunds: [
                {
                    id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                    refund_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
                    payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                    order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                    amount_money: { amount: BigInt(111), currency: "CAD" },
                    reason: "Returning item",
                    device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                    deadline_duration: "PT5M",
                    status: "COMPLETED",
                    cancel_reason: "BUYER_CANCELED",
                    created_at: "2020-09-29T15:21:46.771Z",
                    updated_at: "2020-09-29T15:21:48.675Z",
                    app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                    location_id: "76C9W6K8CNNQ5",
                },
            ],
            cursor: "cursor",
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/refunds/search")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.refunds.search({
            query: {
                filter: {
                    status: "COMPLETED",
                },
            },
            limit: 1,
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            refunds: [
                {
                    id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                    refund_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
                    payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                    order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                    amount_money: {
                        amount: BigInt("111"),
                        currency: "CAD",
                    },
                    reason: "Returning item",
                    device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                    deadline_duration: "PT5M",
                    status: "COMPLETED",
                    cancel_reason: "BUYER_CANCELED",
                    created_at: "2020-09-29T15:21:46.771Z",
                    updated_at: "2020-09-29T15:21:48.675Z",
                    app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                    location_id: "76C9W6K8CNNQ5",
                },
            ],
            cursor: "cursor",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            refund: {
                id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: { amount: BigInt(111), currency: "CAD" },
                reason: "Returning item",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                deadline_duration: "PT5M",
                status: "COMPLETED",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2020-09-29T15:21:46.771Z",
                updated_at: "2020-09-29T15:21:48.675Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        };
        server
            .mockEndpoint()
            .get("/v2/terminals/refunds/terminal_refund_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.refunds.get({
            terminal_refund_id: "terminal_refund_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            refund: {
                id: "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: {
                    amount: BigInt("111"),
                    currency: "CAD",
                },
                reason: "Returning item",
                device_id: "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
                deadline_duration: "PT5M",
                status: "COMPLETED",
                cancel_reason: "BUYER_CANCELED",
                created_at: "2020-09-29T15:21:46.771Z",
                updated_at: "2020-09-29T15:21:48.675Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        });
    });

    test("cancel", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            refund: {
                id: "g6ycb6HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "refund_id",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: { amount: BigInt(100), currency: "CAD" },
                reason: "reason",
                device_id: "42690809-faa2-4701-a24b-19d3d34c9aaa",
                deadline_duration: "PT5M",
                status: "CANCELED",
                cancel_reason: "SELLER_CANCELED",
                created_at: "2020-10-21T22:47:23.241Z",
                updated_at: "2020-10-21T22:47:30.096Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        };
        server
            .mockEndpoint()
            .post("/v2/terminals/refunds/terminal_refund_id/cancel")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.terminal.refunds.cancel({
            terminal_refund_id: "terminal_refund_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            refund: {
                id: "g6ycb6HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                refund_id: "refund_id",
                payment_id: "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
                order_id: "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
                amount_money: {
                    amount: BigInt("100"),
                    currency: "CAD",
                },
                reason: "reason",
                device_id: "42690809-faa2-4701-a24b-19d3d34c9aaa",
                deadline_duration: "PT5M",
                status: "CANCELED",
                cancel_reason: "SELLER_CANCELED",
                created_at: "2020-10-21T22:47:23.241Z",
                updated_at: "2020-10-21T22:47:30.096Z",
                app_id: "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
                location_id: "76C9W6K8CNNQ5",
            },
        });
    });
});
