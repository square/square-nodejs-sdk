/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { SquareClient } from "../../../src/Client";

describe("EventTypes", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            event_types: ["inventory.count.updated"],
            metadata: [
                {
                    event_type: "inventory.count.updated",
                    api_version_introduced: "2018-07-12",
                    release_status: "PUBLIC",
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/v2/webhooks/event-types")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.webhooks.eventTypes.list({
            apiVersion: "api_version",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            eventTypes: ["inventory.count.updated"],
            metadata: [
                {
                    eventType: "inventory.count.updated",
                    apiVersionIntroduced: "2018-07-12",
                    releaseStatus: "PUBLIC",
                },
            ],
        });
    });
});
