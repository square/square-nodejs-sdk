/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { SquareClient } from "../../src/Client";

describe("Cards", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            idempotency_key: "4935a656-a929-4792-b97c-8848be85c27c",
            source_id: "cnon:uIbfJXhXETSP197M3GB",
            card: {
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    locality: "New York",
                    administrative_district_level_1: "NY",
                    postal_code: "10003",
                    country: "US",
                },
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                reference_id: "user-id-1",
            },
        };
        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt(11),
                exp_year: BigInt(2022),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: true,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt(1),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        };
        server
            .mockEndpoint()
            .post("/v2/cards")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.cards.create({
            idempotency_key: "4935a656-a929-4792-b97c-8848be85c27c",
            source_id: "cnon:uIbfJXhXETSP197M3GB",
            card: {
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    locality: "New York",
                    administrative_district_level_1: "NY",
                    postal_code: "10003",
                    country: "US",
                },
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                reference_id: "user-id-1",
            },
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt("11"),
                exp_year: BigInt("2022"),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: true,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt("1"),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt(11),
                exp_year: BigInt(2022),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: true,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt(1),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        };
        server.mockEndpoint().get("/v2/cards/card_id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.cards.get({
            card_id: "card_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt("11"),
                exp_year: BigInt("2022"),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: true,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt("1"),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        });
    });

    test("disable", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt(11),
                exp_year: BigInt(2022),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: false,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt(2),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        };
        server
            .mockEndpoint()
            .post("/v2/cards/card_id/disable")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.cards.disable({
            card_id: "card_id",
        });
        expect(response).toEqual({
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            card: {
                id: "ccof:uIbfJXhXETSP197M3GB",
                card_brand: "VISA",
                last_4: "1111",
                exp_month: BigInt("11"),
                exp_year: BigInt("2022"),
                cardholder_name: "Amelia Earhart",
                billing_address: {
                    address_line_1: "500 Electric Ave",
                    address_line_2: "Suite 600",
                    address_line_3: "address_line_3",
                    locality: "New York",
                    sublocality: "sublocality",
                    sublocality_2: "sublocality_2",
                    sublocality_3: "sublocality_3",
                    administrative_district_level_1: "NY",
                    administrative_district_level_2: "administrative_district_level_2",
                    administrative_district_level_3: "administrative_district_level_3",
                    postal_code: "10003",
                    country: "US",
                    first_name: "first_name",
                    last_name: "last_name",
                },
                fingerprint: "ex-p-cs80EK9Flz7LsCMv-szbptQ_ssAGrhemzSTsPFgt9nzyE6t7okiLIQc-qw_quqKX4Q",
                customer_id: "VDKXEEKPJN48QDG3BGGFAK05P8",
                merchant_id: "6SSW7HV8K2ST5",
                reference_id: "user-id-1",
                enabled: false,
                card_type: "CREDIT",
                prepaid_type: "NOT_PREPAID",
                bin: "411111",
                version: BigInt("2"),
                card_co_brand: "UNKNOWN",
                issuer_alert: "ISSUER_ALERT_CARD_CLOSED",
                issuer_alert_at: "issuer_alert_at",
                hsa_fsa: false,
            },
        });
    });
});
