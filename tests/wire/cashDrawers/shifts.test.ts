// This file was auto-generated by Fern from our API Definition.

import { SquareClient } from "../../../src/Client";
import { mockServerPool } from "../../mock-server/MockServerPool";

describe("Shifts", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            cursor: "cursor",
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            cash_drawer_shifts: [
                {
                    id: "DCC99978-09A6-4926-849F-300BE9C5793A",
                    state: "CLOSED",
                    opened_at: "2019-11-22T00:42:54.000Z",
                    ended_at: "2019-11-22T00:44:49.000Z",
                    closed_at: "2019-11-22T00:44:49.000Z",
                    description: "Misplaced some change",
                    opened_cash_money: { amount: BigInt(10000), currency: "USD" },
                    expected_cash_money: { amount: BigInt(10000), currency: "USD" },
                    closed_cash_money: { amount: BigInt(9970), currency: "USD" },
                    created_at: "created_at",
                    updated_at: "updated_at",
                    location_id: "location_id",
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/v2/cash-drawers/shifts")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const expected = {
            cursor: "cursor",
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            cashDrawerShifts: [
                {
                    id: "DCC99978-09A6-4926-849F-300BE9C5793A",
                    state: "CLOSED",
                    openedAt: "2019-11-22T00:42:54.000Z",
                    endedAt: "2019-11-22T00:44:49.000Z",
                    closedAt: "2019-11-22T00:44:49.000Z",
                    description: "Misplaced some change",
                    openedCashMoney: {
                        amount: BigInt("10000"),
                        currency: "USD",
                    },
                    expectedCashMoney: {
                        amount: BigInt("10000"),
                        currency: "USD",
                    },
                    closedCashMoney: {
                        amount: BigInt("9970"),
                        currency: "USD",
                    },
                    createdAt: "created_at",
                    updatedAt: "updated_at",
                    locationId: "location_id",
                },
            ],
        };
        const page = await client.cashDrawers.shifts.list({
            locationId: "location_id",
            sortOrder: "DESC",
            beginTime: "begin_time",
            endTime: "end_time",
            limit: 1,
            cursor: "cursor",
        });

        expect(expected.cashDrawerShifts).toEqual(page.data);
        expect(page.hasNextPage()).toBe(true);
        const nextPage = await page.getNextPage();
        expect(expected.cashDrawerShifts).toEqual(nextPage.data);
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            cash_drawer_shift: {
                id: "DCC99978-09A6-4926-849F-300BE9C5793A",
                state: "CLOSED",
                opened_at: "2019-11-22T00:42:54.000Z",
                ended_at: "2019-11-22T00:44:49.000Z",
                closed_at: "2019-11-22T00:44:49.000Z",
                description: "Misplaced some change",
                opened_cash_money: { amount: BigInt(10000), currency: "USD" },
                cash_payment_money: { amount: BigInt(100), currency: "USD" },
                cash_refunds_money: { amount: BigInt(-100), currency: "USD" },
                cash_paid_in_money: { amount: BigInt(10000), currency: "USD" },
                cash_paid_out_money: { amount: BigInt(-10000), currency: "USD" },
                expected_cash_money: { amount: BigInt(10000), currency: "USD" },
                closed_cash_money: { amount: BigInt(9970), currency: "USD" },
                device: { id: "id", name: "My iPad" },
                created_at: "created_at",
                updated_at: "updated_at",
                location_id: "location_id",
                team_member_ids: ["team_member_ids"],
                opening_team_member_id: "",
                ending_team_member_id: "",
                closing_team_member_id: "",
            },
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
        };
        server
            .mockEndpoint()
            .get("/v2/cash-drawers/shifts/shift_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.cashDrawers.shifts.get({
            shiftId: "shift_id",
            locationId: "location_id",
        });
        expect(response).toEqual({
            cashDrawerShift: {
                id: "DCC99978-09A6-4926-849F-300BE9C5793A",
                state: "CLOSED",
                openedAt: "2019-11-22T00:42:54.000Z",
                endedAt: "2019-11-22T00:44:49.000Z",
                closedAt: "2019-11-22T00:44:49.000Z",
                description: "Misplaced some change",
                openedCashMoney: {
                    amount: BigInt("10000"),
                    currency: "USD",
                },
                cashPaymentMoney: {
                    amount: BigInt("100"),
                    currency: "USD",
                },
                cashRefundsMoney: {
                    amount: BigInt("-100"),
                    currency: "USD",
                },
                cashPaidInMoney: {
                    amount: BigInt("10000"),
                    currency: "USD",
                },
                cashPaidOutMoney: {
                    amount: BigInt("-10000"),
                    currency: "USD",
                },
                expectedCashMoney: {
                    amount: BigInt("10000"),
                    currency: "USD",
                },
                closedCashMoney: {
                    amount: BigInt("9970"),
                    currency: "USD",
                },
                device: {
                    id: "id",
                    name: "My iPad",
                },
                createdAt: "created_at",
                updatedAt: "updated_at",
                locationId: "location_id",
                teamMemberIds: ["team_member_ids"],
                openingTeamMemberId: "",
                endingTeamMemberId: "",
                closingTeamMemberId: "",
            },
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
        });
    });

    test("listEvents", async () => {
        const server = mockServerPool.createServer();
        const client = new SquareClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            cursor: "cursor",
            errors: [{ category: "API_ERROR", code: "INTERNAL_SERVER_ERROR", detail: "detail", field: "field" }],
            cash_drawer_shift_events: [
                {
                    id: "9F07DB01-D85A-4B77-88C3-D5C64CEB5155",
                    event_type: "CASH_TENDER_PAYMENT",
                    event_money: { amount: BigInt(100), currency: "USD" },
                    created_at: "2019-11-22T00:43:02.000Z",
                    description: "",
                    team_member_id: "",
                },
                {
                    id: "B2854CEA-A781-49B3-8F31-C64558231F48",
                    event_type: "CASH_TENDER_PAYMENT",
                    event_money: { amount: BigInt(250), currency: "USD" },
                    created_at: "2019-11-22T00:43:12.000Z",
                    description: "",
                    team_member_id: "",
                },
                {
                    id: "B5FB7F72-95CD-44A3-974D-26C41064D042",
                    event_type: "CASH_TENDER_CANCELLED_PAYMENT",
                    event_money: { amount: BigInt(250), currency: "USD" },
                    created_at: "2019-11-22T00:43:23.000Z",
                    description: "",
                    team_member_id: "",
                },
                {
                    id: "0B425480-8504-40B4-A867-37B23543931B",
                    event_type: "CASH_TENDER_REFUND",
                    event_money: { amount: BigInt(100), currency: "USD" },
                    created_at: "2019-11-22T00:43:46.000Z",
                    description: "",
                    team_member_id: "",
                },
                {
                    id: "8C66E60E-FDCF-4EEF-A98D-3B14B7ED5CBE",
                    event_type: "PAID_IN",
                    event_money: { amount: BigInt(10000), currency: "USD" },
                    created_at: "2019-11-22T00:44:18.000Z",
                    description: "Transfer from another drawer",
                    team_member_id: "",
                },
                {
                    id: "D5ACA7FE-C64D-4ADA-8BC8-82118A2DAE4F",
                    event_type: "PAID_OUT",
                    event_money: { amount: BigInt(10000), currency: "USD" },
                    created_at: "2019-11-22T00:44:29.000Z",
                    description: "Transfer out to another drawer",
                    team_member_id: "",
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/v2/cash-drawers/shifts/shift_id/events")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const expected = {
            cursor: "cursor",
            errors: [
                {
                    category: "API_ERROR",
                    code: "INTERNAL_SERVER_ERROR",
                    detail: "detail",
                    field: "field",
                },
            ],
            cashDrawerShiftEvents: [
                {
                    id: "9F07DB01-D85A-4B77-88C3-D5C64CEB5155",
                    eventType: "CASH_TENDER_PAYMENT",
                    eventMoney: {
                        amount: BigInt("100"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:43:02.000Z",
                    description: "",
                    teamMemberId: "",
                },
                {
                    id: "B2854CEA-A781-49B3-8F31-C64558231F48",
                    eventType: "CASH_TENDER_PAYMENT",
                    eventMoney: {
                        amount: BigInt("250"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:43:12.000Z",
                    description: "",
                    teamMemberId: "",
                },
                {
                    id: "B5FB7F72-95CD-44A3-974D-26C41064D042",
                    eventType: "CASH_TENDER_CANCELLED_PAYMENT",
                    eventMoney: {
                        amount: BigInt("250"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:43:23.000Z",
                    description: "",
                    teamMemberId: "",
                },
                {
                    id: "0B425480-8504-40B4-A867-37B23543931B",
                    eventType: "CASH_TENDER_REFUND",
                    eventMoney: {
                        amount: BigInt("100"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:43:46.000Z",
                    description: "",
                    teamMemberId: "",
                },
                {
                    id: "8C66E60E-FDCF-4EEF-A98D-3B14B7ED5CBE",
                    eventType: "PAID_IN",
                    eventMoney: {
                        amount: BigInt("10000"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:44:18.000Z",
                    description: "Transfer from another drawer",
                    teamMemberId: "",
                },
                {
                    id: "D5ACA7FE-C64D-4ADA-8BC8-82118A2DAE4F",
                    eventType: "PAID_OUT",
                    eventMoney: {
                        amount: BigInt("10000"),
                        currency: "USD",
                    },
                    createdAt: "2019-11-22T00:44:29.000Z",
                    description: "Transfer out to another drawer",
                    teamMemberId: "",
                },
            ],
        };
        const page = await client.cashDrawers.shifts.listEvents({
            shiftId: "shift_id",
            locationId: "location_id",
            limit: 1,
            cursor: "cursor",
        });

        expect(expected.cashDrawerShiftEvents).toEqual(page.data);
        expect(page.hasNextPage()).toBe(true);
        const nextPage = await page.getNextPage();
        expect(expected.cashDrawerShiftEvents).toEqual(nextPage.data);
    });
});
