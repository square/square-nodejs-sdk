/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Square from "../../../../../api/index";
import * as core from "../../../../../core";
import { DisputeEvidenceType } from "../../../../types/DisputeEvidenceType";

export const CreateDisputeEvidenceTextRequest: core.serialization.Schema<
    serializers.CreateDisputeEvidenceTextRequest.Raw,
    Omit<Square.CreateDisputeEvidenceTextRequest, "disputeId">
> = core.serialization.object({
    idempotencyKey: core.serialization.property("idempotency_key", core.serialization.string()),
    evidenceType: core.serialization.property("evidence_type", DisputeEvidenceType.optional()),
    evidenceText: core.serialization.property("evidence_text", core.serialization.string()),
});

export declare namespace CreateDisputeEvidenceTextRequest {
    export interface Raw {
        idempotency_key: string;
        evidence_type?: DisputeEvidenceType.Raw | null;
        evidence_text: string;
    }
}
