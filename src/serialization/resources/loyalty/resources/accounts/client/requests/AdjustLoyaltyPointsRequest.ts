// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import type * as serializers from "../../../../../../index";
import { LoyaltyEventAdjustPoints } from "../../../../../../types/LoyaltyEventAdjustPoints";

export const AdjustLoyaltyPointsRequest: core.serialization.Schema<
    serializers.loyalty.AdjustLoyaltyPointsRequest.Raw,
    Omit<Square.loyalty.AdjustLoyaltyPointsRequest, "accountId">
> = core.serialization.object({
    idempotencyKey: core.serialization.property("idempotency_key", core.serialization.string()),
    adjustPoints: core.serialization.property("adjust_points", LoyaltyEventAdjustPoints),
    allowNegativeBalance: core.serialization.property(
        "allow_negative_balance",
        core.serialization.boolean().optionalNullable(),
    ),
});

export declare namespace AdjustLoyaltyPointsRequest {
    export interface Raw {
        idempotency_key: string;
        adjust_points: LoyaltyEventAdjustPoints.Raw;
        allow_negative_balance?: (boolean | null | undefined) | null;
    }
}
