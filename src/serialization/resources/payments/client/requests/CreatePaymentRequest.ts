/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Square from "../../../../../api/index";
import * as core from "../../../../../core";
import { Money } from "../../../../types/Money";
import { Address } from "../../../../types/Address";
import { CashPaymentDetails } from "../../../../types/CashPaymentDetails";
import { ExternalPaymentDetails } from "../../../../types/ExternalPaymentDetails";
import { CustomerDetails } from "../../../../types/CustomerDetails";
import { OfflinePaymentDetails } from "../../../../types/OfflinePaymentDetails";

export const CreatePaymentRequest: core.serialization.Schema<
    serializers.CreatePaymentRequest.Raw,
    Square.CreatePaymentRequest
> = core.serialization.object({
    sourceId: core.serialization.property("source_id", core.serialization.string()),
    idempotencyKey: core.serialization.property("idempotency_key", core.serialization.string()),
    amountMoney: core.serialization.property("amount_money", Money.optional()),
    tipMoney: core.serialization.property("tip_money", Money.optional()),
    appFeeMoney: core.serialization.property("app_fee_money", Money.optional()),
    delayDuration: core.serialization.property("delay_duration", core.serialization.string().optional()),
    delayAction: core.serialization.property("delay_action", core.serialization.string().optional()),
    autocomplete: core.serialization.boolean().optional(),
    orderId: core.serialization.property("order_id", core.serialization.string().optional()),
    customerId: core.serialization.property("customer_id", core.serialization.string().optional()),
    locationId: core.serialization.property("location_id", core.serialization.string().optional()),
    teamMemberId: core.serialization.property("team_member_id", core.serialization.string().optional()),
    referenceId: core.serialization.property("reference_id", core.serialization.string().optional()),
    verificationToken: core.serialization.property("verification_token", core.serialization.string().optional()),
    acceptPartialAuthorization: core.serialization.property(
        "accept_partial_authorization",
        core.serialization.boolean().optional(),
    ),
    buyerEmailAddress: core.serialization.property("buyer_email_address", core.serialization.string().optional()),
    buyerPhoneNumber: core.serialization.property("buyer_phone_number", core.serialization.string().optional()),
    billingAddress: core.serialization.property("billing_address", Address.optional()),
    shippingAddress: core.serialization.property("shipping_address", Address.optional()),
    note: core.serialization.string().optional(),
    statementDescriptionIdentifier: core.serialization.property(
        "statement_description_identifier",
        core.serialization.string().optional(),
    ),
    cashDetails: core.serialization.property("cash_details", CashPaymentDetails.optional()),
    externalDetails: core.serialization.property("external_details", ExternalPaymentDetails.optional()),
    customerDetails: core.serialization.property("customer_details", CustomerDetails.optional()),
    offlinePaymentDetails: core.serialization.property("offline_payment_details", OfflinePaymentDetails.optional()),
});

export declare namespace CreatePaymentRequest {
    export interface Raw {
        source_id: string;
        idempotency_key: string;
        amount_money?: Money.Raw | null;
        tip_money?: Money.Raw | null;
        app_fee_money?: Money.Raw | null;
        delay_duration?: string | null;
        delay_action?: string | null;
        autocomplete?: boolean | null;
        order_id?: string | null;
        customer_id?: string | null;
        location_id?: string | null;
        team_member_id?: string | null;
        reference_id?: string | null;
        verification_token?: string | null;
        accept_partial_authorization?: boolean | null;
        buyer_email_address?: string | null;
        buyer_phone_number?: string | null;
        billing_address?: Address.Raw | null;
        shipping_address?: Address.Raw | null;
        note?: string | null;
        statement_description_identifier?: string | null;
        cash_details?: CashPaymentDetails.Raw | null;
        external_details?: ExternalPaymentDetails.Raw | null;
        customer_details?: CustomerDetails.Raw | null;
        offline_payment_details?: OfflinePaymentDetails.Raw | null;
    }
}
