// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import * as serializers from "../index";
import { CatalogObjectAvailabilityPeriod } from "./CatalogObjectAvailabilityPeriod";
import { CatalogObjectCustomAttributeDefinition } from "./CatalogObjectCustomAttributeDefinition";
import { CatalogObjectDiscount } from "./CatalogObjectDiscount";
import { CatalogObjectImage } from "./CatalogObjectImage";
import { CatalogObjectItemOptionValue } from "./CatalogObjectItemOptionValue";
import { CatalogObjectItemVariation } from "./CatalogObjectItemVariation";
import { CatalogObjectMeasurementUnit } from "./CatalogObjectMeasurementUnit";
import { CatalogObjectModifier } from "./CatalogObjectModifier";
import { CatalogObjectPricingRule } from "./CatalogObjectPricingRule";
import { CatalogObjectProductSet } from "./CatalogObjectProductSet";
import { CatalogObjectQuickAmountsSettings } from "./CatalogObjectQuickAmountsSettings";
import { CatalogObjectSubscriptionPlanVariation } from "./CatalogObjectSubscriptionPlanVariation";
import { CatalogObjectTax } from "./CatalogObjectTax";
import { CatalogObjectTimePeriod } from "./CatalogObjectTimePeriod";

export const CatalogObject: core.serialization.Schema<serializers.CatalogObject.Raw, Square.CatalogObject> =
    core.serialization
        .union("type", {
            ITEM: core.serialization.lazyObject(() => serializers.CatalogObjectItem),
            IMAGE: CatalogObjectImage,
            CATEGORY: core.serialization.lazyObject(() => serializers.CatalogObjectCategory),
            ITEM_VARIATION: CatalogObjectItemVariation,
            TAX: CatalogObjectTax,
            DISCOUNT: CatalogObjectDiscount,
            MODIFIER_LIST: core.serialization.lazyObject(() => serializers.CatalogObjectModifierList),
            MODIFIER: CatalogObjectModifier,
            PRICING_RULE: CatalogObjectPricingRule,
            PRODUCT_SET: CatalogObjectProductSet,
            TIME_PERIOD: CatalogObjectTimePeriod,
            MEASUREMENT_UNIT: CatalogObjectMeasurementUnit,
            SUBSCRIPTION_PLAN_VARIATION: CatalogObjectSubscriptionPlanVariation,
            ITEM_OPTION: core.serialization.lazyObject(() => serializers.CatalogObjectItemOption),
            ITEM_OPTION_VAL: CatalogObjectItemOptionValue,
            CUSTOM_ATTRIBUTE_DEFINITION: CatalogObjectCustomAttributeDefinition,
            QUICK_AMOUNTS_SETTINGS: CatalogObjectQuickAmountsSettings,
            SUBSCRIPTION_PLAN: core.serialization.lazyObject(() => serializers.CatalogObjectSubscriptionPlan),
            AVAILABILITY_PERIOD: CatalogObjectAvailabilityPeriod,
        })
        .transform<Square.CatalogObject>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace CatalogObject {
    export type Raw =
        | CatalogObject.Item
        | CatalogObject.Image
        | CatalogObject.Category
        | CatalogObject.ItemVariation
        | CatalogObject.Tax
        | CatalogObject.Discount
        | CatalogObject.ModifierList
        | CatalogObject.Modifier
        | CatalogObject.PricingRule
        | CatalogObject.ProductSet
        | CatalogObject.TimePeriod
        | CatalogObject.MeasurementUnit
        | CatalogObject.SubscriptionPlanVariation
        | CatalogObject.ItemOption
        | CatalogObject.ItemOptionVal
        | CatalogObject.CustomAttributeDefinition
        | CatalogObject.QuickAmountsSettings
        | CatalogObject.SubscriptionPlan
        | CatalogObject.AvailabilityPeriod;

    export interface Item extends serializers.CatalogObjectItem.Raw {
        type: "ITEM";
    }

    export interface Image extends CatalogObjectImage.Raw {
        type: "IMAGE";
    }

    export interface Category extends serializers.CatalogObjectCategory.Raw {
        type: "CATEGORY";
    }

    export interface ItemVariation extends CatalogObjectItemVariation.Raw {
        type: "ITEM_VARIATION";
    }

    export interface Tax extends CatalogObjectTax.Raw {
        type: "TAX";
    }

    export interface Discount extends CatalogObjectDiscount.Raw {
        type: "DISCOUNT";
    }

    export interface ModifierList extends serializers.CatalogObjectModifierList.Raw {
        type: "MODIFIER_LIST";
    }

    export interface Modifier extends CatalogObjectModifier.Raw {
        type: "MODIFIER";
    }

    export interface PricingRule extends CatalogObjectPricingRule.Raw {
        type: "PRICING_RULE";
    }

    export interface ProductSet extends CatalogObjectProductSet.Raw {
        type: "PRODUCT_SET";
    }

    export interface TimePeriod extends CatalogObjectTimePeriod.Raw {
        type: "TIME_PERIOD";
    }

    export interface MeasurementUnit extends CatalogObjectMeasurementUnit.Raw {
        type: "MEASUREMENT_UNIT";
    }

    export interface SubscriptionPlanVariation extends CatalogObjectSubscriptionPlanVariation.Raw {
        type: "SUBSCRIPTION_PLAN_VARIATION";
    }

    export interface ItemOption extends serializers.CatalogObjectItemOption.Raw {
        type: "ITEM_OPTION";
    }

    export interface ItemOptionVal extends CatalogObjectItemOptionValue.Raw {
        type: "ITEM_OPTION_VAL";
    }

    export interface CustomAttributeDefinition extends CatalogObjectCustomAttributeDefinition.Raw {
        type: "CUSTOM_ATTRIBUTE_DEFINITION";
    }

    export interface QuickAmountsSettings extends CatalogObjectQuickAmountsSettings.Raw {
        type: "QUICK_AMOUNTS_SETTINGS";
    }

    export interface SubscriptionPlan extends serializers.CatalogObjectSubscriptionPlan.Raw {
        type: "SUBSCRIPTION_PLAN";
    }

    export interface AvailabilityPeriod extends CatalogObjectAvailabilityPeriod.Raw {
        type: "AVAILABILITY_PERIOD";
    }
}
