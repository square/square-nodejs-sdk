/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { CatalogObjectImage } from "./CatalogObjectImage";
import { CatalogObjectItemVariation } from "./CatalogObjectItemVariation";
import { CatalogObjectTax } from "./CatalogObjectTax";
import { CatalogObjectDiscount } from "./CatalogObjectDiscount";
import { CatalogObjectModifier } from "./CatalogObjectModifier";
import { CatalogObjectDiningOption } from "./CatalogObjectDiningOption";
import { CatalogObjectTaxExemption } from "./CatalogObjectTaxExemption";
import { CatalogObjectServiceCharge } from "./CatalogObjectServiceCharge";
import { CatalogObjectPricingRule } from "./CatalogObjectPricingRule";
import { CatalogObjectProductSet } from "./CatalogObjectProductSet";
import { CatalogObjectTimePeriod } from "./CatalogObjectTimePeriod";
import { CatalogObjectMeasurementUnit } from "./CatalogObjectMeasurementUnit";
import { CatalogObjectItemOptionValue } from "./CatalogObjectItemOptionValue";
import { CatalogObjectCustomAttributeDefinition } from "./CatalogObjectCustomAttributeDefinition";
import { CatalogObjectQuickAmountsSettings } from "./CatalogObjectQuickAmountsSettings";
import { CatalogObjectComponent } from "./CatalogObjectComponent";
import { CatalogObjectComposition } from "./CatalogObjectComposition";
import { CatalogObjectResource } from "./CatalogObjectResource";
import { CatalogObjectCheckoutLink } from "./CatalogObjectCheckoutLink";
import { CatalogObjectAddress } from "./CatalogObjectAddress";
import { CatalogObjectSubscriptionProduct } from "./CatalogObjectSubscriptionProduct";

export const CatalogObject: core.serialization.Schema<serializers.CatalogObject.Raw, Square.CatalogObject> =
    core.serialization
        .union("type", {
            ITEM: core.serialization.lazyObject(() => serializers.CatalogObjectItem),
            IMAGE: CatalogObjectImage,
            CATEGORY: core.serialization.lazyObject(() => serializers.CatalogObjectCategory),
            ITEM_VARIATION: CatalogObjectItemVariation,
            TAX: CatalogObjectTax,
            DISCOUNT: CatalogObjectDiscount,
            MODIFIER_LIST: core.serialization.lazyObject(() => serializers.CatalogObjectModifierList),
            MODIFIER: CatalogObjectModifier,
            DINING_OPTION: CatalogObjectDiningOption,
            TAX_EXEMPTION: CatalogObjectTaxExemption,
            SERVICE_CHARGE: CatalogObjectServiceCharge,
            PRICING_RULE: CatalogObjectPricingRule,
            PRODUCT_SET: CatalogObjectProductSet,
            TIME_PERIOD: CatalogObjectTimePeriod,
            MEASUREMENT_UNIT: CatalogObjectMeasurementUnit,
            SUBSCRIPTION_PLAN: core.serialization.lazyObject(() => serializers.CatalogObjectSubscriptionPlan),
            ITEM_OPTION: core.serialization.lazyObject(() => serializers.CatalogObjectItemOption),
            ITEM_OPTION_VAL: CatalogObjectItemOptionValue,
            CUSTOM_ATTRIBUTE_DEFINITION: CatalogObjectCustomAttributeDefinition,
            QUICK_AMOUNTS_SETTINGS: CatalogObjectQuickAmountsSettings,
            COMPONENT: CatalogObjectComponent,
            COMPOSITION: CatalogObjectComposition,
            RESOURCE: CatalogObjectResource,
            CHECKOUT_LINK: CatalogObjectCheckoutLink,
            ADDRESS: CatalogObjectAddress,
            SUBSCRIPTION_PRODUCT: CatalogObjectSubscriptionProduct,
        })
        .transform<Square.CatalogObject>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace CatalogObject {
    export type Raw =
        | CatalogObject.Item
        | CatalogObject.Image
        | CatalogObject.Category
        | CatalogObject.ItemVariation
        | CatalogObject.Tax
        | CatalogObject.Discount
        | CatalogObject.ModifierList
        | CatalogObject.Modifier
        | CatalogObject.DiningOption
        | CatalogObject.TaxExemption
        | CatalogObject.ServiceCharge
        | CatalogObject.PricingRule
        | CatalogObject.ProductSet
        | CatalogObject.TimePeriod
        | CatalogObject.MeasurementUnit
        | CatalogObject.SubscriptionPlan
        | CatalogObject.ItemOption
        | CatalogObject.ItemOptionVal
        | CatalogObject.CustomAttributeDefinition
        | CatalogObject.QuickAmountsSettings
        | CatalogObject.Component
        | CatalogObject.Composition
        | CatalogObject.Resource
        | CatalogObject.CheckoutLink
        | CatalogObject.Address
        | CatalogObject.SubscriptionProduct;

    export interface Item extends serializers.CatalogObjectItem.Raw {
        type: "ITEM";
    }

    export interface Image extends CatalogObjectImage.Raw {
        type: "IMAGE";
    }

    export interface Category extends serializers.CatalogObjectCategory.Raw {
        type: "CATEGORY";
    }

    export interface ItemVariation extends CatalogObjectItemVariation.Raw {
        type: "ITEM_VARIATION";
    }

    export interface Tax extends CatalogObjectTax.Raw {
        type: "TAX";
    }

    export interface Discount extends CatalogObjectDiscount.Raw {
        type: "DISCOUNT";
    }

    export interface ModifierList extends serializers.CatalogObjectModifierList.Raw {
        type: "MODIFIER_LIST";
    }

    export interface Modifier extends CatalogObjectModifier.Raw {
        type: "MODIFIER";
    }

    export interface DiningOption extends CatalogObjectDiningOption.Raw {
        type: "DINING_OPTION";
    }

    export interface TaxExemption extends CatalogObjectTaxExemption.Raw {
        type: "TAX_EXEMPTION";
    }

    export interface ServiceCharge extends CatalogObjectServiceCharge.Raw {
        type: "SERVICE_CHARGE";
    }

    export interface PricingRule extends CatalogObjectPricingRule.Raw {
        type: "PRICING_RULE";
    }

    export interface ProductSet extends CatalogObjectProductSet.Raw {
        type: "PRODUCT_SET";
    }

    export interface TimePeriod extends CatalogObjectTimePeriod.Raw {
        type: "TIME_PERIOD";
    }

    export interface MeasurementUnit extends CatalogObjectMeasurementUnit.Raw {
        type: "MEASUREMENT_UNIT";
    }

    export interface SubscriptionPlan extends serializers.CatalogObjectSubscriptionPlan.Raw {
        type: "SUBSCRIPTION_PLAN";
    }

    export interface ItemOption extends serializers.CatalogObjectItemOption.Raw {
        type: "ITEM_OPTION";
    }

    export interface ItemOptionVal extends CatalogObjectItemOptionValue.Raw {
        type: "ITEM_OPTION_VAL";
    }

    export interface CustomAttributeDefinition extends CatalogObjectCustomAttributeDefinition.Raw {
        type: "CUSTOM_ATTRIBUTE_DEFINITION";
    }

    export interface QuickAmountsSettings extends CatalogObjectQuickAmountsSettings.Raw {
        type: "QUICK_AMOUNTS_SETTINGS";
    }

    export interface Component extends CatalogObjectComponent.Raw {
        type: "COMPONENT";
    }

    export interface Composition extends CatalogObjectComposition.Raw {
        type: "COMPOSITION";
    }

    export interface Resource extends CatalogObjectResource.Raw {
        type: "RESOURCE";
    }

    export interface CheckoutLink extends CatalogObjectCheckoutLink.Raw {
        type: "CHECKOUT_LINK";
    }

    export interface Address extends CatalogObjectAddress.Raw {
        type: "ADDRESS";
    }

    export interface SubscriptionProduct extends CatalogObjectSubscriptionProduct.Raw {
        type: "SUBSCRIPTION_PRODUCT";
    }
}
