// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { SubscriptionPhase } from "./SubscriptionPhase";

export const CatalogSubscriptionPlanVariation: core.serialization.ObjectSchema<
    serializers.CatalogSubscriptionPlanVariation.Raw,
    Square.CatalogSubscriptionPlanVariation
> = core.serialization.object({
    name: core.serialization.string(),
    phases: core.serialization.list(SubscriptionPhase),
    subscriptionPlanId: core.serialization.property(
        "subscription_plan_id",
        core.serialization.string().optionalNullable(),
    ),
    monthlyBillingAnchorDate: core.serialization.property(
        "monthly_billing_anchor_date",
        core.serialization.bigint().optionalNullable(),
    ),
    canProrate: core.serialization.property("can_prorate", core.serialization.boolean().optionalNullable()),
    successorPlanVariationId: core.serialization.property(
        "successor_plan_variation_id",
        core.serialization.string().optionalNullable(),
    ),
});

export declare namespace CatalogSubscriptionPlanVariation {
    export interface Raw {
        name: string;
        phases: SubscriptionPhase.Raw[];
        subscription_plan_id?: (string | null | undefined) | null;
        monthly_billing_anchor_date?: ((bigint | number) | null | undefined) | null;
        can_prorate?: (boolean | null | undefined) | null;
        successor_plan_variation_id?: (string | null | undefined) | null;
    }
}
