// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Address } from "./Address";
import { Refund } from "./Refund";
import { Tender } from "./Tender";
import { TransactionProduct } from "./TransactionProduct";

export const Transaction: core.serialization.ObjectSchema<serializers.Transaction.Raw, Square.Transaction> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        tenders: core.serialization.list(Tender).optionalNullable(),
        refunds: core.serialization.list(Refund).optionalNullable(),
        referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
        product: TransactionProduct.optional(),
        clientId: core.serialization.property("client_id", core.serialization.string().optionalNullable()),
        shippingAddress: core.serialization.property("shipping_address", Address.optional()),
        orderId: core.serialization.property("order_id", core.serialization.string().optionalNullable()),
    });

export declare namespace Transaction {
    export interface Raw {
        id?: string | null;
        location_id?: (string | null | undefined) | null;
        created_at?: string | null;
        tenders?: (Tender.Raw[] | null | undefined) | null;
        refunds?: (Refund.Raw[] | null | undefined) | null;
        reference_id?: (string | null | undefined) | null;
        product?: TransactionProduct.Raw | null;
        client_id?: (string | null | undefined) | null;
        shipping_address?: Address.Raw | null;
        order_id?: (string | null | undefined) | null;
    }
}
