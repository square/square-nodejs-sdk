// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Money } from "./Money";
import { OrderLineItemAppliedTax } from "./OrderLineItemAppliedTax";
import { OrderServiceChargeCalculationPhase } from "./OrderServiceChargeCalculationPhase";
import { OrderServiceChargeScope } from "./OrderServiceChargeScope";
import { OrderServiceChargeTreatmentType } from "./OrderServiceChargeTreatmentType";

export const OrderReturnServiceCharge: core.serialization.ObjectSchema<
    serializers.OrderReturnServiceCharge.Raw,
    Square.OrderReturnServiceCharge
> = core.serialization.object({
    uid: core.serialization.string().optionalNullable(),
    sourceServiceChargeUid: core.serialization.property(
        "source_service_charge_uid",
        core.serialization.string().optionalNullable(),
    ),
    name: core.serialization.string().optionalNullable(),
    catalogObjectId: core.serialization.property("catalog_object_id", core.serialization.string().optionalNullable()),
    catalogVersion: core.serialization.property("catalog_version", core.serialization.bigint().optionalNullable()),
    percentage: core.serialization.string().optionalNullable(),
    amountMoney: core.serialization.property("amount_money", Money.optional()),
    appliedMoney: core.serialization.property("applied_money", Money.optional()),
    totalMoney: core.serialization.property("total_money", Money.optional()),
    totalTaxMoney: core.serialization.property("total_tax_money", Money.optional()),
    calculationPhase: core.serialization.property("calculation_phase", OrderServiceChargeCalculationPhase.optional()),
    taxable: core.serialization.boolean().optionalNullable(),
    appliedTaxes: core.serialization.property(
        "applied_taxes",
        core.serialization.list(OrderLineItemAppliedTax).optionalNullable(),
    ),
    treatmentType: core.serialization.property("treatment_type", OrderServiceChargeTreatmentType.optional()),
    scope: OrderServiceChargeScope.optional(),
});

export declare namespace OrderReturnServiceCharge {
    export interface Raw {
        uid?: (string | null | undefined) | null;
        source_service_charge_uid?: (string | null | undefined) | null;
        name?: (string | null | undefined) | null;
        catalog_object_id?: (string | null | undefined) | null;
        catalog_version?: ((bigint | number) | null | undefined) | null;
        percentage?: (string | null | undefined) | null;
        amount_money?: Money.Raw | null;
        applied_money?: Money.Raw | null;
        total_money?: Money.Raw | null;
        total_tax_money?: Money.Raw | null;
        calculation_phase?: OrderServiceChargeCalculationPhase.Raw | null;
        taxable?: (boolean | null | undefined) | null;
        applied_taxes?: (OrderLineItemAppliedTax.Raw[] | null | undefined) | null;
        treatment_type?: OrderServiceChargeTreatmentType.Raw | null;
        scope?: OrderServiceChargeScope.Raw | null;
    }
}
