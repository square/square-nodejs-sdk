/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";

export const WebhookSubscription: core.serialization.ObjectSchema<
    serializers.WebhookSubscription.Raw,
    Square.WebhookSubscription
> = core.serialization.object({
    id: core.serialization.string().optional(),
    name: core.serialization.string().optionalNullable(),
    enabled: core.serialization.boolean().optionalNullable(),
    eventTypes: core.serialization.property(
        "event_types",
        core.serialization.list(core.serialization.string()).optionalNullable(),
    ),
    notificationUrl: core.serialization.property("notification_url", core.serialization.string().optionalNullable()),
    apiVersion: core.serialization.property("api_version", core.serialization.string().optionalNullable()),
    signatureKey: core.serialization.property("signature_key", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
});

export declare namespace WebhookSubscription {
    export interface Raw {
        id?: string | null;
        name?: (string | null) | null;
        enabled?: (boolean | null) | null;
        event_types?: (string[] | null) | null;
        notification_url?: (string | null) | null;
        api_version?: (string | null) | null;
        signature_key?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
