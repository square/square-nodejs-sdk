/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Money } from "./Money";
import { PaymentOptions } from "./PaymentOptions";
import { DeviceCheckoutOptions } from "./DeviceCheckoutOptions";
import { ActionCancelReason } from "./ActionCancelReason";
import { CheckoutOptionsPaymentType } from "./CheckoutOptionsPaymentType";

export const TerminalCheckout: core.serialization.ObjectSchema<
    serializers.TerminalCheckout.Raw,
    Square.TerminalCheckout
> = core.serialization.object({
    id: core.serialization.string().optional(),
    amountMoney: core.serialization.property("amount_money", Money),
    referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
    note: core.serialization.string().optionalNullable(),
    orderId: core.serialization.property("order_id", core.serialization.string().optionalNullable()),
    paymentOptions: core.serialization.property("payment_options", PaymentOptions.optional()),
    deviceOptions: core.serialization.property("device_options", DeviceCheckoutOptions),
    deadlineDuration: core.serialization.property("deadline_duration", core.serialization.string().optionalNullable()),
    status: core.serialization.string().optional(),
    cancelReason: core.serialization.property("cancel_reason", ActionCancelReason.optional()),
    paymentIds: core.serialization.property(
        "payment_ids",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    appId: core.serialization.property("app_id", core.serialization.string().optional()),
    locationId: core.serialization.property("location_id", core.serialization.string().optional()),
    paymentType: core.serialization.property("payment_type", CheckoutOptionsPaymentType.optional()),
    teamMemberId: core.serialization.property("team_member_id", core.serialization.string().optionalNullable()),
    customerId: core.serialization.property("customer_id", core.serialization.string().optionalNullable()),
    appFeeMoney: core.serialization.property("app_fee_money", Money.optional()),
    statementDescriptionIdentifier: core.serialization.property(
        "statement_description_identifier",
        core.serialization.string().optionalNullable(),
    ),
    tipMoney: core.serialization.property("tip_money", Money.optional()),
});

export declare namespace TerminalCheckout {
    export interface Raw {
        id?: string | null;
        amount_money: Money.Raw;
        reference_id?: (string | null) | null;
        note?: (string | null) | null;
        order_id?: (string | null) | null;
        payment_options?: PaymentOptions.Raw | null;
        device_options: DeviceCheckoutOptions.Raw;
        deadline_duration?: (string | null) | null;
        status?: string | null;
        cancel_reason?: ActionCancelReason.Raw | null;
        payment_ids?: string[] | null;
        created_at?: string | null;
        updated_at?: string | null;
        app_id?: string | null;
        location_id?: string | null;
        payment_type?: CheckoutOptionsPaymentType.Raw | null;
        team_member_id?: (string | null) | null;
        customer_id?: (string | null) | null;
        app_fee_money?: Money.Raw | null;
        statement_description_identifier?: (string | null) | null;
        tip_money?: Money.Raw | null;
    }
}
