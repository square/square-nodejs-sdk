/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Money } from "./Money";
import { TenderType } from "./TenderType";
import { TenderCardDetails } from "./TenderCardDetails";
import { TenderCashDetails } from "./TenderCashDetails";
import { TenderBankAccountDetails } from "./TenderBankAccountDetails";
import { TenderBuyNowPayLaterDetails } from "./TenderBuyNowPayLaterDetails";
import { TenderSquareAccountDetails } from "./TenderSquareAccountDetails";
import { AdditionalRecipient } from "./AdditionalRecipient";

export const Tender: core.serialization.ObjectSchema<serializers.Tender.Raw, Square.Tender> = core.serialization.object(
    {
        id: core.serialization.string().optional(),
        locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
        transactionId: core.serialization.property("transaction_id", core.serialization.string().optionalNullable()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        note: core.serialization.string().optionalNullable(),
        amountMoney: core.serialization.property("amount_money", Money.optional()),
        tipMoney: core.serialization.property("tip_money", Money.optional()),
        processingFeeMoney: core.serialization.property("processing_fee_money", Money.optional()),
        customerId: core.serialization.property("customer_id", core.serialization.string().optionalNullable()),
        type: TenderType,
        cardDetails: core.serialization.property("card_details", TenderCardDetails.optional()),
        cashDetails: core.serialization.property("cash_details", TenderCashDetails.optional()),
        bankAccountDetails: core.serialization.property("bank_account_details", TenderBankAccountDetails.optional()),
        buyNowPayLaterDetails: core.serialization.property(
            "buy_now_pay_later_details",
            TenderBuyNowPayLaterDetails.optional(),
        ),
        squareAccountDetails: core.serialization.property(
            "square_account_details",
            TenderSquareAccountDetails.optional(),
        ),
        additionalRecipients: core.serialization.property(
            "additional_recipients",
            core.serialization.list(AdditionalRecipient).optionalNullable(),
        ),
        paymentId: core.serialization.property("payment_id", core.serialization.string().optionalNullable()),
    },
);

export declare namespace Tender {
    export interface Raw {
        id?: string | null;
        location_id?: (string | null) | null;
        transaction_id?: (string | null) | null;
        created_at?: string | null;
        note?: (string | null) | null;
        amount_money?: Money.Raw | null;
        tip_money?: Money.Raw | null;
        processing_fee_money?: Money.Raw | null;
        customer_id?: (string | null) | null;
        type: TenderType.Raw;
        card_details?: TenderCardDetails.Raw | null;
        cash_details?: TenderCashDetails.Raw | null;
        bank_account_details?: TenderBankAccountDetails.Raw | null;
        buy_now_pay_later_details?: TenderBuyNowPayLaterDetails.Raw | null;
        square_account_details?: TenderSquareAccountDetails.Raw | null;
        additional_recipients?: (AdditionalRecipient.Raw[] | null) | null;
        payment_id?: (string | null) | null;
    }
}
