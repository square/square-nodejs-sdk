/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";

export const Break: core.serialization.ObjectSchema<serializers.Break.Raw, Square.Break> = core.serialization.object({
    id: core.serialization.string().optional(),
    startAt: core.serialization.property("start_at", core.serialization.string()),
    endAt: core.serialization.property("end_at", core.serialization.string().optionalNullable()),
    breakTypeId: core.serialization.property("break_type_id", core.serialization.string()),
    name: core.serialization.string(),
    expectedDuration: core.serialization.property("expected_duration", core.serialization.string()),
    isPaid: core.serialization.property("is_paid", core.serialization.boolean()),
});

export declare namespace Break {
    export interface Raw {
        id?: string | null;
        start_at: string;
        end_at?: (string | null) | null;
        break_type_id: string;
        name: string;
        expected_duration: string;
        is_paid: boolean;
    }
}
