/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Address } from "./Address";
import { VendorContact } from "./VendorContact";
import { VendorStatus } from "./VendorStatus";

export const Vendor: core.serialization.ObjectSchema<serializers.Vendor.Raw, Square.Vendor> = core.serialization.object(
    {
        id: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
        name: core.serialization.string().optionalNullable(),
        address: Address.optional(),
        contacts: core.serialization.list(VendorContact).optionalNullable(),
        accountNumber: core.serialization.property("account_number", core.serialization.string().optionalNullable()),
        note: core.serialization.string().optionalNullable(),
        version: core.serialization.number().optional(),
        status: VendorStatus.optional(),
    },
);

export declare namespace Vendor {
    export interface Raw {
        id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        name?: (string | null) | null;
        address?: Address.Raw | null;
        contacts?: (VendorContact.Raw[] | null) | null;
        account_number?: (string | null) | null;
        note?: (string | null) | null;
        version?: number | null;
        status?: VendorStatus.Raw | null;
    }
}
