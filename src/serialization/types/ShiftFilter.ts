// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { ShiftFilterStatus } from "./ShiftFilterStatus";
import { ShiftWorkday } from "./ShiftWorkday";
import { TimeRange } from "./TimeRange";

export const ShiftFilter: core.serialization.ObjectSchema<serializers.ShiftFilter.Raw, Square.ShiftFilter> =
    core.serialization.object({
        locationIds: core.serialization.property(
            "location_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
        employeeIds: core.serialization.property(
            "employee_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
        status: ShiftFilterStatus.optional(),
        start: TimeRange.optional(),
        end: TimeRange.optional(),
        workday: ShiftWorkday.optional(),
        teamMemberIds: core.serialization.property(
            "team_member_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
    });

export declare namespace ShiftFilter {
    export interface Raw {
        location_ids?: (string[] | null | undefined) | null;
        employee_ids?: (string[] | null | undefined) | null;
        status?: ShiftFilterStatus.Raw | null;
        start?: TimeRange.Raw | null;
        end?: TimeRange.Raw | null;
        workday?: ShiftWorkday.Raw | null;
        team_member_ids?: (string[] | null | undefined) | null;
    }
}
