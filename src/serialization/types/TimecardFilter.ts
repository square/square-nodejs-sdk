// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { TimecardFilterStatus } from "./TimecardFilterStatus";
import { TimecardWorkday } from "./TimecardWorkday";
import { TimeRange } from "./TimeRange";

export const TimecardFilter: core.serialization.ObjectSchema<serializers.TimecardFilter.Raw, Square.TimecardFilter> =
    core.serialization.object({
        locationIds: core.serialization.property(
            "location_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
        status: TimecardFilterStatus.optional(),
        start: TimeRange.optional(),
        end: TimeRange.optional(),
        workday: TimecardWorkday.optional(),
        teamMemberIds: core.serialization.property(
            "team_member_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
    });

export declare namespace TimecardFilter {
    export interface Raw {
        location_ids?: (string[] | null | undefined) | null;
        status?: TimecardFilterStatus.Raw | null;
        start?: TimeRange.Raw | null;
        end?: TimeRange.Raw | null;
        workday?: TimecardWorkday.Raw | null;
        team_member_ids?: (string[] | null | undefined) | null;
    }
}
