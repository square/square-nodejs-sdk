/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Money } from "./Money";
import { RefundStatus } from "./RefundStatus";
import { AdditionalRecipient } from "./AdditionalRecipient";

export const Refund: core.serialization.ObjectSchema<serializers.Refund.Raw, Square.Refund> = core.serialization.object(
    {
        id: core.serialization.string(),
        locationId: core.serialization.property("location_id", core.serialization.string()),
        transactionId: core.serialization.property("transaction_id", core.serialization.string().optionalNullable()),
        tenderId: core.serialization.property("tender_id", core.serialization.string()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        reason: core.serialization.string(),
        amountMoney: core.serialization.property("amount_money", Money),
        status: RefundStatus,
        processingFeeMoney: core.serialization.property("processing_fee_money", Money.optional()),
        additionalRecipients: core.serialization.property(
            "additional_recipients",
            core.serialization.list(AdditionalRecipient).optionalNullable(),
        ),
    },
);

export declare namespace Refund {
    export interface Raw {
        id: string;
        location_id: string;
        transaction_id?: (string | null) | null;
        tender_id: string;
        created_at?: string | null;
        reason: string;
        amount_money: Money.Raw;
        status: RefundStatus.Raw;
        processing_fee_money?: Money.Raw | null;
        additional_recipients?: (AdditionalRecipient.Raw[] | null) | null;
    }
}
