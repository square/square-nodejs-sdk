// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { InventoryAdjustmentGroup } from "./InventoryAdjustmentGroup";
import { InventoryState } from "./InventoryState";
import { Money } from "./Money";
import { SourceApplication } from "./SourceApplication";

export const InventoryAdjustment: core.serialization.ObjectSchema<
    serializers.InventoryAdjustment.Raw,
    Square.InventoryAdjustment
> = core.serialization.object({
    id: core.serialization.string().optional(),
    referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
    fromState: core.serialization.property("from_state", InventoryState.optional()),
    toState: core.serialization.property("to_state", InventoryState.optional()),
    locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
    catalogObjectId: core.serialization.property("catalog_object_id", core.serialization.string().optionalNullable()),
    catalogObjectType: core.serialization.property(
        "catalog_object_type",
        core.serialization.string().optionalNullable(),
    ),
    quantity: core.serialization.string().optionalNullable(),
    totalPriceMoney: core.serialization.property("total_price_money", Money.optional()),
    occurredAt: core.serialization.property("occurred_at", core.serialization.string().optionalNullable()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    source: SourceApplication.optional(),
    employeeId: core.serialization.property("employee_id", core.serialization.string().optionalNullable()),
    teamMemberId: core.serialization.property("team_member_id", core.serialization.string().optionalNullable()),
    transactionId: core.serialization.property("transaction_id", core.serialization.string().optional()),
    refundId: core.serialization.property("refund_id", core.serialization.string().optional()),
    purchaseOrderId: core.serialization.property("purchase_order_id", core.serialization.string().optional()),
    goodsReceiptId: core.serialization.property("goods_receipt_id", core.serialization.string().optional()),
    adjustmentGroup: core.serialization.property("adjustment_group", InventoryAdjustmentGroup.optional()),
});

export declare namespace InventoryAdjustment {
    export interface Raw {
        id?: string | null;
        reference_id?: (string | null | undefined) | null;
        from_state?: InventoryState.Raw | null;
        to_state?: InventoryState.Raw | null;
        location_id?: (string | null | undefined) | null;
        catalog_object_id?: (string | null | undefined) | null;
        catalog_object_type?: (string | null | undefined) | null;
        quantity?: (string | null | undefined) | null;
        total_price_money?: Money.Raw | null;
        occurred_at?: (string | null | undefined) | null;
        created_at?: string | null;
        source?: SourceApplication.Raw | null;
        employee_id?: (string | null | undefined) | null;
        team_member_id?: (string | null | undefined) | null;
        transaction_id?: string | null;
        refund_id?: string | null;
        purchase_order_id?: string | null;
        goods_receipt_id?: string | null;
        adjustment_group?: InventoryAdjustmentGroup.Raw | null;
    }
}
