// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Money } from "./Money";
import { Phase } from "./Phase";
import { SubscriptionAction } from "./SubscriptionAction";
import { SubscriptionSource } from "./SubscriptionSource";
import { SubscriptionStatus } from "./SubscriptionStatus";

export const Subscription: core.serialization.ObjectSchema<serializers.Subscription.Raw, Square.Subscription> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        locationId: core.serialization.property("location_id", core.serialization.string().optional()),
        planVariationId: core.serialization.property("plan_variation_id", core.serialization.string().optional()),
        customerId: core.serialization.property("customer_id", core.serialization.string().optional()),
        startDate: core.serialization.property("start_date", core.serialization.string().optional()),
        canceledDate: core.serialization.property("canceled_date", core.serialization.string().optionalNullable()),
        chargedThroughDate: core.serialization.property("charged_through_date", core.serialization.string().optional()),
        status: SubscriptionStatus.optional(),
        taxPercentage: core.serialization.property("tax_percentage", core.serialization.string().optionalNullable()),
        invoiceIds: core.serialization.property(
            "invoice_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        priceOverrideMoney: core.serialization.property("price_override_money", Money.optional()),
        version: core.serialization.bigint().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        cardId: core.serialization.property("card_id", core.serialization.string().optionalNullable()),
        timezone: core.serialization.string().optional(),
        source: SubscriptionSource.optional(),
        actions: core.serialization.list(SubscriptionAction).optionalNullable(),
        monthlyBillingAnchorDate: core.serialization.property(
            "monthly_billing_anchor_date",
            core.serialization.number().optional(),
        ),
        phases: core.serialization.list(Phase).optional(),
        completedDate: core.serialization.property("completed_date", core.serialization.string().optionalNullable()),
    });

export declare namespace Subscription {
    export interface Raw {
        id?: string | null;
        location_id?: string | null;
        plan_variation_id?: string | null;
        customer_id?: string | null;
        start_date?: string | null;
        canceled_date?: (string | null | undefined) | null;
        charged_through_date?: string | null;
        status?: SubscriptionStatus.Raw | null;
        tax_percentage?: (string | null | undefined) | null;
        invoice_ids?: string[] | null;
        price_override_money?: Money.Raw | null;
        version?: (bigint | number) | null;
        created_at?: string | null;
        card_id?: (string | null | undefined) | null;
        timezone?: string | null;
        source?: SubscriptionSource.Raw | null;
        actions?: (SubscriptionAction.Raw[] | null | undefined) | null;
        monthly_billing_anchor_date?: number | null;
        phases?: Phase.Raw[] | null;
        completed_date?: (string | null | undefined) | null;
    }
}
