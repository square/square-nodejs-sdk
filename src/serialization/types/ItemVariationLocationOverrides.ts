/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Money } from "./Money";
import { CatalogPricingType } from "./CatalogPricingType";
import { InventoryAlertType } from "./InventoryAlertType";

export const ItemVariationLocationOverrides: core.serialization.ObjectSchema<
    serializers.ItemVariationLocationOverrides.Raw,
    Square.ItemVariationLocationOverrides
> = core.serialization.object({
    locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
    priceMoney: core.serialization.property("price_money", Money.optional()),
    pricingType: core.serialization.property("pricing_type", CatalogPricingType.optional()),
    trackInventory: core.serialization.property("track_inventory", core.serialization.boolean().optionalNullable()),
    inventoryAlertType: core.serialization.property("inventory_alert_type", InventoryAlertType.optional()),
    inventoryAlertThreshold: core.serialization.property(
        "inventory_alert_threshold",
        core.serialization.bigint().optionalNullable(),
    ),
    soldOut: core.serialization.property("sold_out", core.serialization.boolean().optional()),
    soldOutValidUntil: core.serialization.property("sold_out_valid_until", core.serialization.string().optional()),
});

export declare namespace ItemVariationLocationOverrides {
    export interface Raw {
        location_id?: (string | null) | null;
        price_money?: Money.Raw | null;
        pricing_type?: CatalogPricingType.Raw | null;
        track_inventory?: (boolean | null) | null;
        inventory_alert_type?: InventoryAlertType.Raw | null;
        inventory_alert_threshold?: ((bigint | number) | null) | null;
        sold_out?: boolean | null;
        sold_out_valid_until?: string | null;
    }
}
