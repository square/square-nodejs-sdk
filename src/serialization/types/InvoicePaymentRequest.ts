// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { InvoiceAutomaticPaymentSource } from "./InvoiceAutomaticPaymentSource";
import { InvoicePaymentReminder } from "./InvoicePaymentReminder";
import { InvoiceRequestMethod } from "./InvoiceRequestMethod";
import { InvoiceRequestType } from "./InvoiceRequestType";
import { Money } from "./Money";

export const InvoicePaymentRequest: core.serialization.ObjectSchema<
    serializers.InvoicePaymentRequest.Raw,
    Square.InvoicePaymentRequest
> = core.serialization.object({
    uid: core.serialization.string().optionalNullable(),
    requestMethod: core.serialization.property("request_method", InvoiceRequestMethod.optional()),
    requestType: core.serialization.property("request_type", InvoiceRequestType.optional()),
    dueDate: core.serialization.property("due_date", core.serialization.string().optionalNullable()),
    fixedAmountRequestedMoney: core.serialization.property("fixed_amount_requested_money", Money.optional()),
    percentageRequested: core.serialization.property(
        "percentage_requested",
        core.serialization.string().optionalNullable(),
    ),
    tippingEnabled: core.serialization.property("tipping_enabled", core.serialization.boolean().optionalNullable()),
    automaticPaymentSource: core.serialization.property(
        "automatic_payment_source",
        InvoiceAutomaticPaymentSource.optional(),
    ),
    cardId: core.serialization.property("card_id", core.serialization.string().optionalNullable()),
    reminders: core.serialization.list(InvoicePaymentReminder).optionalNullable(),
    computedAmountMoney: core.serialization.property("computed_amount_money", Money.optional()),
    totalCompletedAmountMoney: core.serialization.property("total_completed_amount_money", Money.optional()),
    roundingAdjustmentIncludedMoney: core.serialization.property(
        "rounding_adjustment_included_money",
        Money.optional(),
    ),
});

export declare namespace InvoicePaymentRequest {
    export interface Raw {
        uid?: (string | null | undefined) | null;
        request_method?: InvoiceRequestMethod.Raw | null;
        request_type?: InvoiceRequestType.Raw | null;
        due_date?: (string | null | undefined) | null;
        fixed_amount_requested_money?: Money.Raw | null;
        percentage_requested?: (string | null | undefined) | null;
        tipping_enabled?: (boolean | null | undefined) | null;
        automatic_payment_source?: InvoiceAutomaticPaymentSource.Raw | null;
        card_id?: (string | null | undefined) | null;
        reminders?: (InvoicePaymentReminder.Raw[] | null | undefined) | null;
        computed_amount_money?: Money.Raw | null;
        total_completed_amount_money?: Money.Raw | null;
        rounding_adjustment_included_money?: Money.Raw | null;
    }
}
