/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Country } from "./Country";
import { Currency } from "./Currency";
import { BankAccountType } from "./BankAccountType";
import { BankAccountStatus } from "./BankAccountStatus";

export const BankAccount: core.serialization.ObjectSchema<serializers.BankAccount.Raw, Square.BankAccount> =
    core.serialization.object({
        id: core.serialization.string(),
        accountNumberSuffix: core.serialization.property("account_number_suffix", core.serialization.string()),
        country: Country,
        currency: Currency,
        accountType: core.serialization.property("account_type", BankAccountType),
        holderName: core.serialization.property("holder_name", core.serialization.string()),
        primaryBankIdentificationNumber: core.serialization.property(
            "primary_bank_identification_number",
            core.serialization.string(),
        ),
        secondaryBankIdentificationNumber: core.serialization.property(
            "secondary_bank_identification_number",
            core.serialization.string().optionalNullable(),
        ),
        debitMandateReferenceId: core.serialization.property(
            "debit_mandate_reference_id",
            core.serialization.string().optionalNullable(),
        ),
        referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
        locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
        status: BankAccountStatus,
        creditable: core.serialization.boolean(),
        debitable: core.serialization.boolean(),
        fingerprint: core.serialization.string().optionalNullable(),
        version: core.serialization.number().optional(),
        bankName: core.serialization.property("bank_name", core.serialization.string().optionalNullable()),
    });

export declare namespace BankAccount {
    export interface Raw {
        id: string;
        account_number_suffix: string;
        country: Country.Raw;
        currency: Currency.Raw;
        account_type: BankAccountType.Raw;
        holder_name: string;
        primary_bank_identification_number: string;
        secondary_bank_identification_number?: (string | null) | null;
        debit_mandate_reference_id?: (string | null) | null;
        reference_id?: (string | null) | null;
        location_id?: (string | null) | null;
        status: BankAccountStatus.Raw;
        creditable: boolean;
        debitable: boolean;
        fingerprint?: (string | null) | null;
        version?: number | null;
        bank_name?: (string | null) | null;
    }
}
