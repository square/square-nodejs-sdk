/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { SubscriptionCadence } from "./SubscriptionCadence";
import { Money } from "./Money";
import { SubscriptionPricing } from "./SubscriptionPricing";

export const SubscriptionPhase: core.serialization.ObjectSchema<
    serializers.SubscriptionPhase.Raw,
    Square.SubscriptionPhase
> = core.serialization.object({
    uid: core.serialization.string().optionalNullable(),
    cadence: SubscriptionCadence,
    periods: core.serialization.number().optionalNullable(),
    recurringPriceMoney: core.serialization.property("recurring_price_money", Money.optional()),
    ordinal: core.serialization.bigint().optionalNullable(),
    pricing: SubscriptionPricing.optional(),
});

export declare namespace SubscriptionPhase {
    export interface Raw {
        uid?: (string | null) | null;
        cadence: SubscriptionCadence.Raw;
        periods?: (number | null) | null;
        recurring_price_money?: Money.Raw | null;
        ordinal?: ((bigint | number) | null) | null;
        pricing?: SubscriptionPricing.Raw | null;
    }
}
