/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";

export const BreakType: core.serialization.ObjectSchema<serializers.BreakType.Raw, Square.BreakType> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        locationId: core.serialization.property("location_id", core.serialization.string()),
        breakName: core.serialization.property("break_name", core.serialization.string()),
        expectedDuration: core.serialization.property("expected_duration", core.serialization.string()),
        isPaid: core.serialization.property("is_paid", core.serialization.boolean()),
        version: core.serialization.number().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    });

export declare namespace BreakType {
    export interface Raw {
        id?: string | null;
        location_id: string;
        break_name: string;
        expected_duration: string;
        is_paid: boolean;
        version?: number | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
