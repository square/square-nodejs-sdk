/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { LoyaltyPromotionIncentive } from "./LoyaltyPromotionIncentive";
import { LoyaltyPromotionAvailableTimeData } from "./LoyaltyPromotionAvailableTimeData";
import { LoyaltyPromotionTriggerLimit } from "./LoyaltyPromotionTriggerLimit";
import { LoyaltyPromotionStatus } from "./LoyaltyPromotionStatus";
import { Money } from "./Money";

export const LoyaltyPromotion: core.serialization.ObjectSchema<
    serializers.LoyaltyPromotion.Raw,
    Square.LoyaltyPromotion
> = core.serialization.object({
    id: core.serialization.string().optional(),
    name: core.serialization.string(),
    incentive: LoyaltyPromotionIncentive,
    availableTime: core.serialization.property("available_time", LoyaltyPromotionAvailableTimeData),
    triggerLimit: core.serialization.property("trigger_limit", LoyaltyPromotionTriggerLimit.optional()),
    status: LoyaltyPromotionStatus.optional(),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    canceledAt: core.serialization.property("canceled_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    loyaltyProgramId: core.serialization.property("loyalty_program_id", core.serialization.string().optional()),
    minimumSpendAmountMoney: core.serialization.property("minimum_spend_amount_money", Money.optional()),
    qualifyingItemVariationIds: core.serialization.property(
        "qualifying_item_variation_ids",
        core.serialization.list(core.serialization.string()).optionalNullable(),
    ),
    qualifyingCategoryIds: core.serialization.property(
        "qualifying_category_ids",
        core.serialization.list(core.serialization.string()).optionalNullable(),
    ),
});

export declare namespace LoyaltyPromotion {
    export interface Raw {
        id?: string | null;
        name: string;
        incentive: LoyaltyPromotionIncentive.Raw;
        available_time: LoyaltyPromotionAvailableTimeData.Raw;
        trigger_limit?: LoyaltyPromotionTriggerLimit.Raw | null;
        status?: LoyaltyPromotionStatus.Raw | null;
        created_at?: string | null;
        canceled_at?: string | null;
        updated_at?: string | null;
        loyalty_program_id?: string | null;
        minimum_spend_amount_money?: Money.Raw | null;
        qualifying_item_variation_ids?: (string[] | null) | null;
        qualifying_category_ids?: (string[] | null) | null;
    }
}
