// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Phase } from "./Phase";
import { SubscriptionActionType } from "./SubscriptionActionType";

export const SubscriptionAction: core.serialization.ObjectSchema<
    serializers.SubscriptionAction.Raw,
    Square.SubscriptionAction
> = core.serialization.object({
    id: core.serialization.string().optional(),
    type: SubscriptionActionType.optional(),
    effectiveDate: core.serialization.property("effective_date", core.serialization.string().optionalNullable()),
    monthlyBillingAnchorDate: core.serialization.property(
        "monthly_billing_anchor_date",
        core.serialization.number().optionalNullable(),
    ),
    phases: core.serialization.list(Phase).optionalNullable(),
    newPlanVariationId: core.serialization.property(
        "new_plan_variation_id",
        core.serialization.string().optionalNullable(),
    ),
});

export declare namespace SubscriptionAction {
    export interface Raw {
        id?: string | null;
        type?: SubscriptionActionType.Raw | null;
        effective_date?: (string | null | undefined) | null;
        monthly_billing_anchor_date?: (number | null | undefined) | null;
        phases?: (Phase.Raw[] | null | undefined) | null;
        new_plan_variation_id?: (string | null | undefined) | null;
    }
}
