// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { SegmentFilter } from "./SegmentFilter";
import { TimeRange } from "./TimeRange";

export const SearchAvailabilityFilter: core.serialization.ObjectSchema<
    serializers.SearchAvailabilityFilter.Raw,
    Square.SearchAvailabilityFilter
> = core.serialization.object({
    startAtRange: core.serialization.property("start_at_range", TimeRange),
    locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
    segmentFilters: core.serialization.property(
        "segment_filters",
        core.serialization.list(SegmentFilter).optionalNullable(),
    ),
    bookingId: core.serialization.property("booking_id", core.serialization.string().optionalNullable()),
});

export declare namespace SearchAvailabilityFilter {
    export interface Raw {
        start_at_range: TimeRange.Raw;
        location_id?: (string | null | undefined) | null;
        segment_filters?: (SegmentFilter.Raw[] | null | undefined) | null;
        booking_id?: (string | null | undefined) | null;
    }
}
