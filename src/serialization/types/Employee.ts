/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { EmployeeStatus } from "./EmployeeStatus";

export const Employee: core.serialization.ObjectSchema<serializers.Employee.Raw, Square.Employee> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        firstName: core.serialization.property("first_name", core.serialization.string().optionalNullable()),
        lastName: core.serialization.property("last_name", core.serialization.string().optionalNullable()),
        email: core.serialization.string().optionalNullable(),
        phoneNumber: core.serialization.property("phone_number", core.serialization.string().optionalNullable()),
        locationIds: core.serialization.property(
            "location_ids",
            core.serialization.list(core.serialization.string()).optionalNullable(),
        ),
        status: EmployeeStatus.optional(),
        isOwner: core.serialization.property("is_owner", core.serialization.boolean().optionalNullable()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    });

export declare namespace Employee {
    export interface Raw {
        id?: string | null;
        first_name?: (string | null) | null;
        last_name?: (string | null) | null;
        email?: (string | null) | null;
        phone_number?: (string | null) | null;
        location_ids?: (string[] | null) | null;
        status?: EmployeeStatus.Raw | null;
        is_owner?: (boolean | null) | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
