/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { FulfillmentRecipient } from "./FulfillmentRecipient";
import { FulfillmentPickupDetailsScheduleType } from "./FulfillmentPickupDetailsScheduleType";
import { FulfillmentPickupDetailsCurbsidePickupDetails } from "./FulfillmentPickupDetailsCurbsidePickupDetails";

export const FulfillmentPickupDetails: core.serialization.ObjectSchema<
    serializers.FulfillmentPickupDetails.Raw,
    Square.FulfillmentPickupDetails
> = core.serialization.object({
    recipient: FulfillmentRecipient.optional(),
    expiresAt: core.serialization.property("expires_at", core.serialization.string().optionalNullable()),
    autoCompleteDuration: core.serialization.property(
        "auto_complete_duration",
        core.serialization.string().optionalNullable(),
    ),
    scheduleType: core.serialization.property("schedule_type", FulfillmentPickupDetailsScheduleType.optional()),
    pickupAt: core.serialization.property("pickup_at", core.serialization.string().optionalNullable()),
    pickupWindowDuration: core.serialization.property(
        "pickup_window_duration",
        core.serialization.string().optionalNullable(),
    ),
    prepTimeDuration: core.serialization.property("prep_time_duration", core.serialization.string().optionalNullable()),
    note: core.serialization.string().optionalNullable(),
    placedAt: core.serialization.property("placed_at", core.serialization.string().optional()),
    acceptedAt: core.serialization.property("accepted_at", core.serialization.string().optional()),
    rejectedAt: core.serialization.property("rejected_at", core.serialization.string().optional()),
    readyAt: core.serialization.property("ready_at", core.serialization.string().optional()),
    expiredAt: core.serialization.property("expired_at", core.serialization.string().optional()),
    pickedUpAt: core.serialization.property("picked_up_at", core.serialization.string().optional()),
    canceledAt: core.serialization.property("canceled_at", core.serialization.string().optional()),
    cancelReason: core.serialization.property("cancel_reason", core.serialization.string().optionalNullable()),
    isCurbsidePickup: core.serialization.property(
        "is_curbside_pickup",
        core.serialization.boolean().optionalNullable(),
    ),
    curbsidePickupDetails: core.serialization.property(
        "curbside_pickup_details",
        FulfillmentPickupDetailsCurbsidePickupDetails.optional(),
    ),
});

export declare namespace FulfillmentPickupDetails {
    export interface Raw {
        recipient?: FulfillmentRecipient.Raw | null;
        expires_at?: (string | null) | null;
        auto_complete_duration?: (string | null) | null;
        schedule_type?: FulfillmentPickupDetailsScheduleType.Raw | null;
        pickup_at?: (string | null) | null;
        pickup_window_duration?: (string | null) | null;
        prep_time_duration?: (string | null) | null;
        note?: (string | null) | null;
        placed_at?: string | null;
        accepted_at?: string | null;
        rejected_at?: string | null;
        ready_at?: string | null;
        expired_at?: string | null;
        picked_up_at?: string | null;
        canceled_at?: string | null;
        cancel_reason?: (string | null) | null;
        is_curbside_pickup?: (boolean | null) | null;
        curbside_pickup_details?: FulfillmentPickupDetailsCurbsidePickupDetails.Raw | null;
    }
}
