/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { CashDrawerShiftState } from "./CashDrawerShiftState";
import { Money } from "./Money";
import { CashDrawerDevice } from "./CashDrawerDevice";

export const CashDrawerShift: core.serialization.ObjectSchema<serializers.CashDrawerShift.Raw, Square.CashDrawerShift> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        state: CashDrawerShiftState.optional(),
        openedAt: core.serialization.property("opened_at", core.serialization.string().optionalNullable()),
        endedAt: core.serialization.property("ended_at", core.serialization.string().optionalNullable()),
        closedAt: core.serialization.property("closed_at", core.serialization.string().optionalNullable()),
        description: core.serialization.string().optionalNullable(),
        openedCashMoney: core.serialization.property("opened_cash_money", Money.optional()),
        cashPaymentMoney: core.serialization.property("cash_payment_money", Money.optional()),
        cashRefundsMoney: core.serialization.property("cash_refunds_money", Money.optional()),
        cashPaidInMoney: core.serialization.property("cash_paid_in_money", Money.optional()),
        cashPaidOutMoney: core.serialization.property("cash_paid_out_money", Money.optional()),
        expectedCashMoney: core.serialization.property("expected_cash_money", Money.optional()),
        closedCashMoney: core.serialization.property("closed_cash_money", Money.optional()),
        device: CashDrawerDevice.optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
        locationId: core.serialization.property("location_id", core.serialization.string().optional()),
        teamMemberIds: core.serialization.property(
            "team_member_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        openingTeamMemberId: core.serialization.property(
            "opening_team_member_id",
            core.serialization.string().optional(),
        ),
        endingTeamMemberId: core.serialization.property(
            "ending_team_member_id",
            core.serialization.string().optional(),
        ),
        closingTeamMemberId: core.serialization.property(
            "closing_team_member_id",
            core.serialization.string().optional(),
        ),
    });

export declare namespace CashDrawerShift {
    export interface Raw {
        id?: string | null;
        state?: CashDrawerShiftState.Raw | null;
        opened_at?: (string | null) | null;
        ended_at?: (string | null) | null;
        closed_at?: (string | null) | null;
        description?: (string | null) | null;
        opened_cash_money?: Money.Raw | null;
        cash_payment_money?: Money.Raw | null;
        cash_refunds_money?: Money.Raw | null;
        cash_paid_in_money?: Money.Raw | null;
        cash_paid_out_money?: Money.Raw | null;
        expected_cash_money?: Money.Raw | null;
        closed_cash_money?: Money.Raw | null;
        device?: CashDrawerDevice.Raw | null;
        created_at?: string | null;
        updated_at?: string | null;
        location_id?: string | null;
        team_member_ids?: string[] | null;
        opening_team_member_id?: string | null;
        ending_team_member_id?: string | null;
        closing_team_member_id?: string | null;
    }
}
