/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { Money } from "./Money";
import { ProcessingFee } from "./ProcessingFee";
import { CardPaymentDetails } from "./CardPaymentDetails";
import { CashPaymentDetails } from "./CashPaymentDetails";
import { BankAccountPaymentDetails } from "./BankAccountPaymentDetails";
import { ExternalPaymentDetails } from "./ExternalPaymentDetails";
import { DigitalWalletDetails } from "./DigitalWalletDetails";
import { BuyNowPayLaterDetails } from "./BuyNowPayLaterDetails";
import { SquareAccountDetails } from "./SquareAccountDetails";
import { RiskEvaluation } from "./RiskEvaluation";
import { Address } from "./Address";
import { DeviceDetails } from "./DeviceDetails";
import { ApplicationDetails } from "./ApplicationDetails";
import { OfflinePaymentDetails } from "./OfflinePaymentDetails";

export const Payment: core.serialization.ObjectSchema<serializers.Payment.Raw, Square.Payment> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
        amountMoney: core.serialization.property("amount_money", Money.optional()),
        tipMoney: core.serialization.property("tip_money", Money.optional()),
        totalMoney: core.serialization.property("total_money", Money.optional()),
        appFeeMoney: core.serialization.property("app_fee_money", Money.optional()),
        approvedMoney: core.serialization.property("approved_money", Money.optional()),
        processingFee: core.serialization.property("processing_fee", core.serialization.list(ProcessingFee).optional()),
        refundedMoney: core.serialization.property("refunded_money", Money.optional()),
        status: core.serialization.string().optional(),
        delayDuration: core.serialization.property("delay_duration", core.serialization.string().optional()),
        delayAction: core.serialization.property("delay_action", core.serialization.string().optionalNullable()),
        delayedUntil: core.serialization.property("delayed_until", core.serialization.string().optional()),
        sourceType: core.serialization.property("source_type", core.serialization.string().optional()),
        cardDetails: core.serialization.property("card_details", CardPaymentDetails.optional()),
        cashDetails: core.serialization.property("cash_details", CashPaymentDetails.optional()),
        bankAccountDetails: core.serialization.property("bank_account_details", BankAccountPaymentDetails.optional()),
        externalDetails: core.serialization.property("external_details", ExternalPaymentDetails.optional()),
        walletDetails: core.serialization.property("wallet_details", DigitalWalletDetails.optional()),
        buyNowPayLaterDetails: core.serialization.property(
            "buy_now_pay_later_details",
            BuyNowPayLaterDetails.optional(),
        ),
        squareAccountDetails: core.serialization.property("square_account_details", SquareAccountDetails.optional()),
        locationId: core.serialization.property("location_id", core.serialization.string().optional()),
        orderId: core.serialization.property("order_id", core.serialization.string().optional()),
        referenceId: core.serialization.property("reference_id", core.serialization.string().optional()),
        customerId: core.serialization.property("customer_id", core.serialization.string().optional()),
        employeeId: core.serialization.property("employee_id", core.serialization.string().optional()),
        teamMemberId: core.serialization.property("team_member_id", core.serialization.string().optionalNullable()),
        refundIds: core.serialization.property(
            "refund_ids",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        riskEvaluation: core.serialization.property("risk_evaluation", RiskEvaluation.optional()),
        terminalCheckoutId: core.serialization.property("terminal_checkout_id", core.serialization.string().optional()),
        buyerEmailAddress: core.serialization.property("buyer_email_address", core.serialization.string().optional()),
        billingAddress: core.serialization.property("billing_address", Address.optional()),
        shippingAddress: core.serialization.property("shipping_address", Address.optional()),
        note: core.serialization.string().optional(),
        statementDescriptionIdentifier: core.serialization.property(
            "statement_description_identifier",
            core.serialization.string().optional(),
        ),
        capabilities: core.serialization.list(core.serialization.string()).optional(),
        receiptNumber: core.serialization.property("receipt_number", core.serialization.string().optional()),
        receiptUrl: core.serialization.property("receipt_url", core.serialization.string().optional()),
        deviceDetails: core.serialization.property("device_details", DeviceDetails.optional()),
        applicationDetails: core.serialization.property("application_details", ApplicationDetails.optional()),
        isOfflinePayment: core.serialization.property("is_offline_payment", core.serialization.boolean().optional()),
        offlinePaymentDetails: core.serialization.property("offline_payment_details", OfflinePaymentDetails.optional()),
        versionToken: core.serialization.property("version_token", core.serialization.string().optionalNullable()),
    });

export declare namespace Payment {
    export interface Raw {
        id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        amount_money?: Money.Raw | null;
        tip_money?: Money.Raw | null;
        total_money?: Money.Raw | null;
        app_fee_money?: Money.Raw | null;
        approved_money?: Money.Raw | null;
        processing_fee?: ProcessingFee.Raw[] | null;
        refunded_money?: Money.Raw | null;
        status?: string | null;
        delay_duration?: string | null;
        delay_action?: (string | null) | null;
        delayed_until?: string | null;
        source_type?: string | null;
        card_details?: CardPaymentDetails.Raw | null;
        cash_details?: CashPaymentDetails.Raw | null;
        bank_account_details?: BankAccountPaymentDetails.Raw | null;
        external_details?: ExternalPaymentDetails.Raw | null;
        wallet_details?: DigitalWalletDetails.Raw | null;
        buy_now_pay_later_details?: BuyNowPayLaterDetails.Raw | null;
        square_account_details?: SquareAccountDetails.Raw | null;
        location_id?: string | null;
        order_id?: string | null;
        reference_id?: string | null;
        customer_id?: string | null;
        employee_id?: string | null;
        team_member_id?: (string | null) | null;
        refund_ids?: string[] | null;
        risk_evaluation?: RiskEvaluation.Raw | null;
        terminal_checkout_id?: string | null;
        buyer_email_address?: string | null;
        billing_address?: Address.Raw | null;
        shipping_address?: Address.Raw | null;
        note?: string | null;
        statement_description_identifier?: string | null;
        capabilities?: string[] | null;
        receipt_number?: string | null;
        receipt_url?: string | null;
        device_details?: DeviceDetails.Raw | null;
        application_details?: ApplicationDetails.Raw | null;
        is_offline_payment?: boolean | null;
        offline_payment_details?: OfflinePaymentDetails.Raw | null;
        version_token?: (string | null) | null;
    }
}
