/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { SubscriptionEventSubscriptionEventType } from "./SubscriptionEventSubscriptionEventType";
import { SubscriptionEventInfo } from "./SubscriptionEventInfo";
import { Phase } from "./Phase";

export const SubscriptionEvent: core.serialization.ObjectSchema<
    serializers.SubscriptionEvent.Raw,
    Square.SubscriptionEvent
> = core.serialization.object({
    id: core.serialization.string(),
    subscriptionEventType: core.serialization.property(
        "subscription_event_type",
        SubscriptionEventSubscriptionEventType,
    ),
    effectiveDate: core.serialization.property("effective_date", core.serialization.string()),
    monthlyBillingAnchorDate: core.serialization.property(
        "monthly_billing_anchor_date",
        core.serialization.number().optional(),
    ),
    info: SubscriptionEventInfo.optional(),
    phases: core.serialization.list(Phase).optionalNullable(),
    planVariationId: core.serialization.property("plan_variation_id", core.serialization.string()),
});

export declare namespace SubscriptionEvent {
    export interface Raw {
        id: string;
        subscription_event_type: SubscriptionEventSubscriptionEventType.Raw;
        effective_date: string;
        monthly_billing_anchor_date?: number | null;
        info?: SubscriptionEventInfo.Raw | null;
        phases?: (Phase.Raw[] | null) | null;
        plan_variation_id: string;
    }
}
