/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { SubscriptionPhase } from "./SubscriptionPhase";

export const CatalogSubscriptionPlan: core.serialization.ObjectSchema<
    serializers.CatalogSubscriptionPlan.Raw,
    Square.CatalogSubscriptionPlan
> = core.serialization.object({
    name: core.serialization.string(),
    phases: core.serialization.list(SubscriptionPhase).optionalNullable(),
    subscriptionPlanVariations: core.serialization.property(
        "subscription_plan_variations",
        core.serialization.list(core.serialization.lazy(() => serializers.CatalogObject)).optionalNullable(),
    ),
    eligibleItemIds: core.serialization.property(
        "eligible_item_ids",
        core.serialization.list(core.serialization.string()).optionalNullable(),
    ),
    eligibleCategoryIds: core.serialization.property(
        "eligible_category_ids",
        core.serialization.list(core.serialization.string()).optionalNullable(),
    ),
    allItems: core.serialization.property("all_items", core.serialization.boolean().optionalNullable()),
});

export declare namespace CatalogSubscriptionPlan {
    export interface Raw {
        name: string;
        phases?: (SubscriptionPhase.Raw[] | null) | null;
        subscription_plan_variations?: (serializers.CatalogObject.Raw[] | null) | null;
        eligible_item_ids?: (string[] | null) | null;
        eligible_category_ids?: (string[] | null) | null;
        all_items?: (boolean | null) | null;
    }
}
