// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { Fulfillment } from "./Fulfillment";
import { Money } from "./Money";
import { OrderLineItem } from "./OrderLineItem";
import { OrderLineItemDiscount } from "./OrderLineItemDiscount";
import { OrderLineItemTax } from "./OrderLineItemTax";
import { OrderMoneyAmounts } from "./OrderMoneyAmounts";
import { OrderPricingOptions } from "./OrderPricingOptions";
import { OrderReturn } from "./OrderReturn";
import { OrderReward } from "./OrderReward";
import { OrderRoundingAdjustment } from "./OrderRoundingAdjustment";
import { OrderServiceCharge } from "./OrderServiceCharge";
import { OrderSource } from "./OrderSource";
import { OrderState } from "./OrderState";
import { Refund } from "./Refund";
import { Tender } from "./Tender";

export const Order: core.serialization.ObjectSchema<serializers.Order.Raw, Square.Order> = core.serialization.object({
    id: core.serialization.string().optional(),
    locationId: core.serialization.property("location_id", core.serialization.string()),
    referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
    source: OrderSource.optional(),
    customerId: core.serialization.property("customer_id", core.serialization.string().optionalNullable()),
    lineItems: core.serialization.property("line_items", core.serialization.list(OrderLineItem).optionalNullable()),
    taxes: core.serialization.list(OrderLineItemTax).optionalNullable(),
    discounts: core.serialization.list(OrderLineItemDiscount).optionalNullable(),
    serviceCharges: core.serialization.property(
        "service_charges",
        core.serialization.list(OrderServiceCharge).optionalNullable(),
    ),
    fulfillments: core.serialization.list(Fulfillment).optionalNullable(),
    returns: core.serialization.list(OrderReturn).optional(),
    returnAmounts: core.serialization.property("return_amounts", OrderMoneyAmounts.optional()),
    netAmounts: core.serialization.property("net_amounts", OrderMoneyAmounts.optional()),
    roundingAdjustment: core.serialization.property("rounding_adjustment", OrderRoundingAdjustment.optional()),
    tenders: core.serialization.list(Tender).optional(),
    refunds: core.serialization.list(Refund).optional(),
    metadata: core.serialization
        .record(core.serialization.string(), core.serialization.string().optionalNullable())
        .optionalNullable(),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    closedAt: core.serialization.property("closed_at", core.serialization.string().optional()),
    state: OrderState.optional(),
    version: core.serialization.number().optional(),
    totalMoney: core.serialization.property("total_money", Money.optional()),
    totalTaxMoney: core.serialization.property("total_tax_money", Money.optional()),
    totalDiscountMoney: core.serialization.property("total_discount_money", Money.optional()),
    totalTipMoney: core.serialization.property("total_tip_money", Money.optional()),
    totalServiceChargeMoney: core.serialization.property("total_service_charge_money", Money.optional()),
    ticketName: core.serialization.property("ticket_name", core.serialization.string().optionalNullable()),
    pricingOptions: core.serialization.property("pricing_options", OrderPricingOptions.optional()),
    rewards: core.serialization.list(OrderReward).optional(),
    netAmountDueMoney: core.serialization.property("net_amount_due_money", Money.optional()),
});

export declare namespace Order {
    export interface Raw {
        id?: string | null;
        location_id: string;
        reference_id?: (string | null | undefined) | null;
        source?: OrderSource.Raw | null;
        customer_id?: (string | null | undefined) | null;
        line_items?: (OrderLineItem.Raw[] | null | undefined) | null;
        taxes?: (OrderLineItemTax.Raw[] | null | undefined) | null;
        discounts?: (OrderLineItemDiscount.Raw[] | null | undefined) | null;
        service_charges?: (OrderServiceCharge.Raw[] | null | undefined) | null;
        fulfillments?: (Fulfillment.Raw[] | null | undefined) | null;
        returns?: OrderReturn.Raw[] | null;
        return_amounts?: OrderMoneyAmounts.Raw | null;
        net_amounts?: OrderMoneyAmounts.Raw | null;
        rounding_adjustment?: OrderRoundingAdjustment.Raw | null;
        tenders?: Tender.Raw[] | null;
        refunds?: Refund.Raw[] | null;
        metadata?: (Record<string, (string | null | undefined) | null | undefined> | null | undefined) | null;
        created_at?: string | null;
        updated_at?: string | null;
        closed_at?: string | null;
        state?: OrderState.Raw | null;
        version?: number | null;
        total_money?: Money.Raw | null;
        total_tax_money?: Money.Raw | null;
        total_discount_money?: Money.Raw | null;
        total_tip_money?: Money.Raw | null;
        total_service_charge_money?: Money.Raw | null;
        ticket_name?: (string | null | undefined) | null;
        pricing_options?: OrderPricingOptions.Raw | null;
        rewards?: OrderReward.Raw[] | null;
        net_amount_due_money?: Money.Raw | null;
    }
}
