// This file was auto-generated by Fern from our API Definition.

import type * as Square from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { DisputeEvidenceFile } from "./DisputeEvidenceFile";
import { DisputeEvidenceType } from "./DisputeEvidenceType";

export const DisputeEvidence: core.serialization.ObjectSchema<serializers.DisputeEvidence.Raw, Square.DisputeEvidence> =
    core.serialization.object({
        evidenceId: core.serialization.property("evidence_id", core.serialization.string().optionalNullable()),
        id: core.serialization.string().optional(),
        disputeId: core.serialization.property("dispute_id", core.serialization.string().optionalNullable()),
        evidenceFile: core.serialization.property("evidence_file", DisputeEvidenceFile.optional()),
        evidenceText: core.serialization.property("evidence_text", core.serialization.string().optionalNullable()),
        uploadedAt: core.serialization.property("uploaded_at", core.serialization.string().optionalNullable()),
        evidenceType: core.serialization.property("evidence_type", DisputeEvidenceType.optional()),
    });

export declare namespace DisputeEvidence {
    export interface Raw {
        evidence_id?: (string | null | undefined) | null;
        id?: string | null;
        dispute_id?: (string | null | undefined) | null;
        evidence_file?: DisputeEvidenceFile.Raw | null;
        evidence_text?: (string | null | undefined) | null;
        uploaded_at?: (string | null | undefined) | null;
        evidence_type?: DisputeEvidenceType.Raw | null;
    }
}
