/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { InventoryState } from "./InventoryState";

export const InventoryCount: core.serialization.ObjectSchema<serializers.InventoryCount.Raw, Square.InventoryCount> =
    core.serialization.object({
        catalogObjectId: core.serialization.property(
            "catalog_object_id",
            core.serialization.string().optionalNullable(),
        ),
        catalogObjectType: core.serialization.property(
            "catalog_object_type",
            core.serialization.string().optionalNullable(),
        ),
        state: InventoryState.optional(),
        locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
        quantity: core.serialization.string().optionalNullable(),
        calculatedAt: core.serialization.property("calculated_at", core.serialization.string().optional()),
        isEstimated: core.serialization.property("is_estimated", core.serialization.boolean().optional()),
    });

export declare namespace InventoryCount {
    export interface Raw {
        catalog_object_id?: (string | null) | null;
        catalog_object_type?: (string | null) | null;
        state?: InventoryState.Raw | null;
        location_id?: (string | null) | null;
        quantity?: (string | null) | null;
        calculated_at?: string | null;
        is_estimated?: boolean | null;
    }
}
