/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { InventoryChangeType } from "./InventoryChangeType";
import { InventoryPhysicalCount } from "./InventoryPhysicalCount";
import { InventoryAdjustment } from "./InventoryAdjustment";
import { InventoryTransfer } from "./InventoryTransfer";
import { CatalogMeasurementUnit } from "./CatalogMeasurementUnit";

export const InventoryChange: core.serialization.ObjectSchema<serializers.InventoryChange.Raw, Square.InventoryChange> =
    core.serialization.object({
        type: InventoryChangeType.optional(),
        physicalCount: core.serialization.property("physical_count", InventoryPhysicalCount.optional()),
        adjustment: InventoryAdjustment.optional(),
        transfer: InventoryTransfer.optional(),
        measurementUnit: core.serialization.property("measurement_unit", CatalogMeasurementUnit.optional()),
        measurementUnitId: core.serialization.property("measurement_unit_id", core.serialization.string().optional()),
    });

export declare namespace InventoryChange {
    export interface Raw {
        type?: InventoryChangeType.Raw | null;
        physical_count?: InventoryPhysicalCount.Raw | null;
        adjustment?: InventoryAdjustment.Raw | null;
        transfer?: InventoryTransfer.Raw | null;
        measurement_unit?: CatalogMeasurementUnit.Raw | null;
        measurement_unit_id?: string | null;
    }
}
