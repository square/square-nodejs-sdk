/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Square from "../index.js";

/**
 * The line item being returned in an order.
 */
export interface OrderReturnLineItem {
    /** A unique ID for this return line-item entry. */
    uid?: string | null;
    /** The `uid` of the line item in the original sale order. */
    source_line_item_uid?: string | null;
    /** The name of the line item. */
    name?: string | null;
    /**
     * The quantity returned, formatted as a decimal number.
     * For example, `"3"`.
     *
     * Line items with a `quantity_unit` can have non-integer quantities.
     * For example, `"1.70000"`.
     */
    quantity: string;
    /** The unit and precision that this return line item's quantity is measured in. */
    quantity_unit?: Square.OrderQuantityUnit;
    /** The note of the return line item. */
    note?: string | null;
    /** The [CatalogItemVariation](entity:CatalogItemVariation) ID applied to this return line item. */
    catalog_object_id?: string | null;
    /** The version of the catalog object that this line item references. */
    catalog_version?: (number | bigint) | null;
    /** The name of the variation applied to this return line item. */
    variation_name?: string | null;
    /**
     * The type of line item: an itemized return, a non-itemized return (custom amount),
     * or the return of an unactivated gift card sale.
     * See [OrderLineItemItemType](#type-orderlineitemitemtype) for possible values
     */
    item_type?: Square.OrderLineItemItemType;
    /** The [CatalogModifier](entity:CatalogModifier)s applied to this line item. */
    return_modifiers?: Square.OrderReturnLineItemModifier[] | null;
    /**
     * The list of references to `OrderReturnTax` entities applied to the return line item. Each
     * `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
     * `OrderReturnTax` applied to the return line item. On reads, the applied amount
     * is populated.
     */
    applied_taxes?: Square.OrderLineItemAppliedTax[] | null;
    /**
     * The list of references to `OrderReturnDiscount` entities applied to the return line item. Each
     * `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
     * `OrderReturnDiscount` applied to the return line item. On reads, the applied amount
     * is populated.
     */
    applied_discounts?: Square.OrderLineItemAppliedDiscount[] | null;
    /** The base price for a single unit of the line item. */
    base_price_money?: Square.Money;
    /**
     * The total price of all item variations returned in this line item.
     * The price is calculated as `base_price_money` multiplied by `quantity` and
     * does not include modifiers.
     */
    variation_total_price_money?: Square.Money;
    /** The gross return amount of money calculated as (item base price + modifiers price) * quantity. */
    gross_return_money?: Square.Money;
    /** The total amount of tax money to return for the line item. */
    total_tax_money?: Square.Money;
    /** The total amount of discount money to return for the line item. */
    total_discount_money?: Square.Money;
    /** The total amount of money to return for this line item. */
    total_money?: Square.Money;
    /**
     * The list of references to `OrderReturnServiceCharge` entities applied to the return
     * line item. Each `OrderLineItemAppliedServiceCharge` has a `service_charge_uid` that
     * references the `uid` of a top-level `OrderReturnServiceCharge` applied to the return line
     * item. On reads, the applied amount is populated.
     */
    applied_service_charges?: Square.OrderLineItemAppliedServiceCharge[] | null;
    /** The total amount of apportioned service charge money to return for the line item. */
    total_service_charge_money?: Square.Money;
}
