/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Square from "../../../../index.js";

/**
 * @example
 *     {
 *         limit: BigInt("2"),
 *         query: {
 *             filter: {
 *                 creation_source: {
 *                     values: ["THIRD_PARTY"],
 *                     rule: "INCLUDE"
 *                 },
 *                 created_at: {
 *                     start_at: "2018-01-01T00:00:00-00:00",
 *                     end_at: "2018-02-01T00:00:00-00:00"
 *                 },
 *                 email_address: {
 *                     fuzzy: "example.com"
 *                 },
 *                 group_ids: {
 *                     all: ["545AXB44B4XXWMVQ4W8SBT3HHF"]
 *                 }
 *             },
 *             sort: {
 *                 field: "CREATED_AT",
 *                 order: "ASC"
 *             }
 *         }
 *     }
 */
export interface SearchCustomersRequest {
    /**
     * Include the pagination cursor in subsequent calls to this endpoint to retrieve
     * the next set of results associated with the original query.
     *
     * For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
     */
    cursor?: string;
    /**
     * The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.
     * If the specified limit is invalid, Square returns a `400 VALUE_TOO_LOW` or `400 VALUE_TOO_HIGH` error. The default value is 100.
     *
     * For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
     */
    limit?: number | bigint;
    /**
     * The filtering and sorting criteria for the search request. If a query is not specified,
     * Square returns all customer profiles ordered alphabetically by `given_name` and `family_name`.
     */
    query?: Square.CustomerQuery;
    /**
     * Indicates whether to return the total count of matching customers in the `count` field of the response.
     *
     * The default value is `false`.
     */
    count?: boolean;
}
