/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Square from "../../../../../../index";

/**
 * @example
 *     {
 *         locationId: "location_id",
 *         key: "key",
 *         customAttribute: {
 *             value: "hot cocoa"
 *         }
 *     }
 */
export interface UpsertLocationCustomAttributeRequest {
    /**
     * The ID of the target [location](entity:Location).
     */
    locationId: string;
    /**
     * The key of the custom attribute to create or update. This key must match the `key` of a
     * custom attribute definition in the Square seller account. If the requesting application is not
     * the definition owner, you must use the qualified key.
     */
    key: string;
    /**
     * The custom attribute to create or update, with the following fields:
     * - `value`. This value must conform to the `schema` specified by the definition.
     * For more information, see [Supported data types](https://developer.squareup.com/docs/devtools/customattributes/overview#supported-data-types).
     * - `version`. To enable [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)
     * control for an update operation, include the current version of the custom attribute.
     * If this is not important for your application, version can be set to -1.
     */
    customAttribute: Square.CustomAttribute;
    /**
     * A unique identifier for this request, used to ensure idempotency. For more information,
     * see [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
     */
    idempotencyKey?: string | null;
}
