/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Square from "../../../../index";

/**
 * @example
 *     {
 *         idempotencyKey: "4935a656-a929-4792-b97c-8848be85c27c",
 *         sourceId: "cnon:uIbfJXhXETSP197M3GB",
 *         card: {
 *             cardholderName: "Amelia Earhart",
 *             billingAddress: {
 *                 addressLine1: "500 Electric Ave",
 *                 addressLine2: "Suite 600",
 *                 locality: "New York",
 *                 administrativeDistrictLevel1: "NY",
 *                 postalCode: "10003",
 *                 country: "US"
 *             },
 *             customerId: "VDKXEEKPJN48QDG3BGGFAK05P8",
 *             referenceId: "user-id-1"
 *         }
 *     }
 */
export interface CreateCardRequest {
    /**
     * A unique string that identifies this CreateCard request. Keys can be
     * any valid string and must be unique for every request.
     *
     * Max: 45 characters
     *
     * See [Idempotency keys](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency) for more information.
     */
    idempotencyKey: string;
    /** The ID of the source which represents the card information to be stored. This can be a card nonce or a payment id. */
    sourceId: string;
    /**
     * An identifying token generated by [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).
     * Verification tokens encapsulate customer device information and 3-D Secure
     * challenge results to indicate that Square has verified the buyer identity.
     *
     * See the [SCA Overview](https://developer.squareup.com/docs/sca-overview).
     */
    verificationToken?: string;
    /** Payment details associated with the card to be stored. */
    card: Square.Card;
}
